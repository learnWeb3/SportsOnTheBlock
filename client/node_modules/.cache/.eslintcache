[{"/home/kstwa/Documents/SportsOnTheBlock/client/src/index.js":"1","/home/kstwa/Documents/SportsOnTheBlock/client/src/app.jsx":"2","/home/kstwa/Documents/SportsOnTheBlock/client/src/pages/Faq/index.jsx":"3","/home/kstwa/Documents/SportsOnTheBlock/client/src/context/index.js":"4","/home/kstwa/Documents/SportsOnTheBlock/client/src/pages/Admin/index.jsx":"5","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/NavBar/index.jsx":"6","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/Error/index.jsx":"7","/home/kstwa/Documents/SportsOnTheBlock/client/src/pages/Home/index.jsx":"8","/home/kstwa/Documents/SportsOnTheBlock/client/src/pages/Admin/helpers.js":"9","/home/kstwa/Documents/SportsOnTheBlock/client/src/services/Contract.js":"10","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/SnackBar.index.jsx":"11","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/GameCardAdmin/index.jsx":"12","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/PanelIcon/index.jsx":"13","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/icons/MetamaskIcon/index.jsx":"14","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/icons/CoinIcon/index.jsx":"15","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/icons/TrophyIcon/index.jsx":"16","/home/kstwa/Documents/SportsOnTheBlock/client/src/pages/Home/helpers.js":"17","/home/kstwa/Documents/SportsOnTheBlock/client/src/hooks/index.js":"18","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/icons/PageNotFound/index.js":"19","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/FiltersArea/index.jsx":"20","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/Menu/index.jsx":"21","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/RoutingMenuContent/index.jsx":"22","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/CompetitonFilterMenuContent/index.jsx":"23","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/icons/ServerError/index.jsx":"24","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/icons/Forbidden/index.jsx":"25","/home/kstwa/Documents/SportsOnTheBlock/client/src/utils/index.js":"26","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/GameCardAdmin/GameCardAdminCollapse/index.jsx":"27","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/GameCard/GameCardHeader/index.jsx":"28","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/GameCard/GameCardContent/index.jsx":"29","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/GameCard/index.jsx":"30","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/MainMetrics/index.jsx":"31","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/LoadingAnimation/index.jsx":"32","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/icons/ImagePlaceholder/index.jsx":"33","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/CardActionBar/index.jsx":"34","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/FiltersArea/ActiveFilters/index.jsx":"35","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/SimpleSelect/index.jsx":"36","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/GameCard/helper.js":"37","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/GameCard/GameCardCollapse/index.jsx":"38","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/BetForm/index.jsx":"39","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/Modal/index.jsx":"40","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/ModalClosePanel/index.jsx":"41","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/CreateCompetitionZone/index.jsx":"42","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/CardCompetition/index.jsx":"43","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/GameCard/GameCardMedia/index.jsx":"44","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/CardAlert/index.jsx":"45"},{"size":147,"mtime":1623742394000,"results":"46","hashOfConfig":"47"},{"size":1424,"mtime":1625573562000,"results":"48","hashOfConfig":"47"},{"size":2899,"mtime":1625220822000,"results":"49","hashOfConfig":"47"},{"size":98,"mtime":1624899020000,"results":"50","hashOfConfig":"47"},{"size":7737,"mtime":1625999889373,"results":"51","hashOfConfig":"47"},{"size":1895,"mtime":1625898195422,"results":"52","hashOfConfig":"47"},{"size":2405,"mtime":1625908911806,"results":"53","hashOfConfig":"47"},{"size":7350,"mtime":1625999576620,"results":"54","hashOfConfig":"47"},{"size":331,"mtime":1625895912079,"results":"55","hashOfConfig":"47"},{"size":1265,"mtime":1625815212782,"results":"56","hashOfConfig":"47"},{"size":620,"mtime":1625148166000,"results":"57","hashOfConfig":"47"},{"size":4320,"mtime":1625913811694,"results":"58","hashOfConfig":"47"},{"size":2496,"mtime":1625220980000,"results":"59","hashOfConfig":"47"},{"size":244,"mtime":1623923482000,"results":"60","hashOfConfig":"47"},{"size":228,"mtime":1623923524000,"results":"61","hashOfConfig":"47"},{"size":228,"mtime":1623923500000,"results":"62","hashOfConfig":"47"},{"size":4372,"mtime":1625999379808,"results":"63","hashOfConfig":"47"},{"size":3393,"mtime":1625905449705,"results":"64","hashOfConfig":"47"},{"size":285,"mtime":1624031186000,"results":"65","hashOfConfig":"47"},{"size":1223,"mtime":1624961590000,"results":"66","hashOfConfig":"47"},{"size":1225,"mtime":1623909836000,"results":"67","hashOfConfig":"47"},{"size":1299,"mtime":1625897910592,"results":"68","hashOfConfig":"47"},{"size":1831,"mtime":1624796970000,"results":"69","hashOfConfig":"47"},{"size":283,"mtime":1624031180000,"results":"70","hashOfConfig":"47"},{"size":267,"mtime":1624031334000,"results":"71","hashOfConfig":"47"},{"size":273,"mtime":1625233456000,"results":"72","hashOfConfig":"47"},{"size":1690,"mtime":1625999834318,"results":"73","hashOfConfig":"47"},{"size":1584,"mtime":1625986772663,"results":"74","hashOfConfig":"47"},{"size":652,"mtime":1625306176000,"results":"75","hashOfConfig":"47"},{"size":5976,"mtime":1625986753054,"results":"76","hashOfConfig":"47"},{"size":3692,"mtime":1623849072000,"results":"77","hashOfConfig":"47"},{"size":602,"mtime":1624032172000,"results":"78","hashOfConfig":"47"},{"size":552,"mtime":1625654314000,"results":"79","hashOfConfig":"47"},{"size":1260,"mtime":1625897201026,"results":"80","hashOfConfig":"47"},{"size":1001,"mtime":1624870364000,"results":"81","hashOfConfig":"47"},{"size":1215,"mtime":1625898116577,"results":"82","hashOfConfig":"47"},{"size":1184,"mtime":1625304794000,"results":"83","hashOfConfig":"47"},{"size":2331,"mtime":1625306038000,"results":"84","hashOfConfig":"47"},{"size":8723,"mtime":1625900636619,"results":"85","hashOfConfig":"47"},{"size":656,"mtime":1624891700000,"results":"86","hashOfConfig":"47"},{"size":880,"mtime":1624908214000,"results":"87","hashOfConfig":"47"},{"size":2247,"mtime":1625999711601,"results":"88","hashOfConfig":"47"},{"size":2390,"mtime":1625999753996,"results":"89","hashOfConfig":"47"},{"size":1739,"mtime":1625998215152,"results":"90","hashOfConfig":"47"},{"size":924,"mtime":1625985283113,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1nthin7",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"/home/kstwa/Documents/SportsOnTheBlock/client/src/index.js",[],["191","192"],"/home/kstwa/Documents/SportsOnTheBlock/client/src/app.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/pages/Faq/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/context/index.js",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/pages/Admin/index.jsx",["193","194","195"],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/NavBar/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/Error/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/pages/Home/index.jsx",["196","197"],"import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react\";\nimport config from \"../../config/index.json\";\nimport { useComponentState, useProvider } from \"../../hooks\";\nimport { BettingContract } from \"../../services/Contract\";\nimport { Container, makeStyles, Grid } from \"@material-ui/core\";\nimport SnackBar from \"../../components/SnackBar.index\";\nimport GameCard from \"../../components/GameCard\";\nimport FiltersArea from \"../../components/FiltersArea\";\nimport MainMetrics from \"../../components/MainMetrics\";\nimport { fetchData } from \"../Admin/helpers\";\nimport {\n  getCompetitions,\n  getGames,\n  makeStats,\n  getBets,\n  subscribeToEvents,\n} from \"./helpers\";\n\nconst useStyles = makeStyles(() => ({\n  gradient: {\n    backgroundImage: \"linear-gradient(315deg, #ffffff 0%, #d7e1ec 74%)\",\n    top: \"4rem\",\n    position: \"relative\",\n    minHeight: \"87vh\",\n  },\n  gameContainer: {\n    paddingTop: 16,\n  },\n}));\n\nconst Home = () => {\n  const classes = useStyles();\n  const { state, setState, ErrorPage, LoadingAnimation, alert, setAlert } =\n    useComponentState();\n  const { provider, /*setProvider,*/ accounts /*setAccounts*/ } = useProvider();\n  const [isFilterGameToActive, setFilterGameToActive] = useState(true);\n\n  const [refreshCompetitionsCounter, setRefresCompetitionsCounter] =\n    useState(0);\n  const [refreshGamesCounter, setRefresGamesCounter] = useState(0);\n  const [newBet, setNewBet] = useState(null);\n\n  const [bettingContract, setBettingContract] = useState(null);\n  const [competition, setCompetition] = useState(null);\n  const [competitions, setCompetitions] = useState(null);\n  useEffect(() => {\n    const fetchAndSetBettingContract = async (provider, accounts) => {\n      try {\n        setState({ status: \"loading\", code: null });\n        const _bettingContract = new BettingContract(\n          provider,\n          config.betting_contract_address,\n          accounts\n        );\n        setBettingContract(_bettingContract.contract);\n        const _competitions = await getCompetitions(_bettingContract);\n        if (_competitions.length > 0) {\n          setCompetitions(_competitions);\n          setCompetition(_competitions[0]);\n        } else {\n          setState({\n            status: \"error\",\n            code: 404,\n            message: \"Nothing here yet, please come back later\",\n          });\n        }\n      } catch (error) {\n        console.log(error);\n        setState({ status: \"error\", code: 500 });\n      }\n    };\n\n    if (provider && accounts) {\n      fetchAndSetBettingContract(provider, accounts);\n    }\n  }, [provider, accounts, refreshCompetitionsCounter]);\n\n  const [contractGames, setContractGames] = useState(null);\n  const [games, setGames] = useState(null);\n  const [mainMetrics, setMainMetrics] = useState(null);\n\n  useEffect(() => {\n    const fetchAndSetMainMetricsAndGames = async (bettingContract) => {\n      try {\n        //setState({ status: \"loading\", code: null });\n        const _contract_games = await getGames(bettingContract, competition.id);\n        const _games = await fetchData(`/competitions/${competition.id}/games`);\n        const _bets = await getBets(bettingContract, _contract_games);\n        setMainMetrics(\n          makeStats(_bets, bettingContract, _contract_games, competitions)\n        );\n        setContractGames(_contract_games);\n        setGames([..._games]);\n        setState({ status: \"loaded\", code: null });\n      } catch (error) {\n        console.log(error);\n        setState({ status: \"error\", code: 500 });\n      }\n    };\n\n    const refreshCompetitions = () => {\n      setRefresCompetitionsCounter(refreshCompetitionsCounter + 1);\n    };\n    const refreshGames = () => {\n      setRefresGamesCounter(refreshGamesCounter + 1);\n    };\n\n    const refreshBets = (value) => {\n      setRefresGamesCounter(refreshGamesCounter + 1);\n      setNewBet(value);\n    };\n\n    if (bettingContract && competitions && competition) {\n      fetchAndSetMainMetricsAndGames(bettingContract);\n      subscribeToEvents(\n        bettingContract,\n        refreshGames,\n        refreshCompetitions,\n        refreshBets\n      );\n    }\n  }, [\n    competitions,\n    competition,\n    bettingContract,\n    isFilterGameToActive,\n    refreshGamesCounter,\n  ]);\n\n  if (state.status === \"loading\") return <LoadingAnimation />;\n  else if (state.status === \"loaded\")\n    return (\n      <>\n        <div className={classes.gradient}>\n          <Container maxWidth=\"lg\">\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <MainMetrics\n                  userCount={mainMetrics?.uniqueAddressCount}\n                  totalFunds={mainMetrics?.totalFunds}\n                  competitionCount={mainMetrics?.competitionCount}\n                  gameCount={mainMetrics?.gamesCount}\n                  avgGamePerCompetition={mainMetrics?.avgGamePerCompetition}\n                  transactionCount={mainMetrics?.transactionCount}\n                  avgTransactionCountPerAddress={\n                    mainMetrics?.avgTransactionCountPerAddress\n                  }\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FiltersArea\n                  competition={competition}\n                  competitions={competitions}\n                  setCompetition={(selectedCompetition) =>\n                    setCompetition(selectedCompetition)\n                  }\n                  isFilterGameToActive={isFilterGameToActive}\n                  setFilterGameToActive={(value) =>\n                    setFilterGameToActive(value)\n                  }\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container spacing={2} className={classes.gameContainer}>\n                  {contractGames?.length > 0 ? (\n                    games\n                      .filter((game) =>\n                        contractGames.includes(parseInt(game.id))\n                      )\n                      .map((game) => {\n                        return (\n                          <Grid item xs={12} lg={4} key={game.id}>\n                            <GameCard\n                              competition={competition}\n                              provider={provider}\n                              accounts={accounts}\n                              game={game}\n                              bettingContract={bettingContract}\n                              refreshGamesCounter={refreshGamesCounter}\n                              newBetPresent={newBet === parseInt(game.id)}\n                            />\n                          </Grid>\n                        );\n                      })\n                  ) : (\n                    <ErrorPage\n                      code={404}\n                      height=\"100%\"\n                      messageDisplayed={false}\n                    />\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Container>\n        </div>\n\n        {alert.toogled &&\n          ReactDOM.createPortal(\n            <SnackBar\n              message={alert.message}\n              type={alert.type}\n              setAlert={setAlert}\n            />,\n            document.querySelector(\"body\")\n          )}\n      </>\n    );\n  else {\n    return (\n      <ErrorPage code={state.code} height=\"90vh\" message={state.message} />\n    );\n  }\n};\n\nexport default Home;\n","/home/kstwa/Documents/SportsOnTheBlock/client/src/pages/Admin/helpers.js",["198"],"import { api_token } from \"../../config/index.json\"\nimport { server_root_path } from \"../../config/index.json\"\nexport const fetchData = async (endpoint, params = null) => {\n    const queryParams = params ? `?${params.join('&')}` : '';\n    return await fetch(server_root_path + endpoint + queryParams).then((data) => data.json());\n}","/home/kstwa/Documents/SportsOnTheBlock/client/src/services/Contract.js",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/SnackBar.index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/GameCardAdmin/index.jsx",["199","200","201"],"import React, { useRef, useState } from \"react\";\nimport { useComponentState, useFavorites } from \"../../hooks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionBar from \"../CardActionBar\";\nimport GameCardHeader from \"../GameCard/GameCardHeader/index\";\nimport GameCardContent from \"../GameCard/GameCardContent/index\";\nimport GameCardAdminCollapse from \"./GameCardAdminCollapse/index\";\nimport GameCardMedia from \"../GameCard/GameCardMedia/index\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: \"left\",\n    padding: 16,\n    justifyContent: \"space-between\",\n    \"& h5\": {\n      fontWeight: 700,\n    },\n  },\n  media: {\n    padding: \"1rem\",\n    margin: \"auto\",\n    width: \"unset\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  gameName: {\n    marginBottom: 8,\n  },\n}));\n\nconst GameCardAdmin = ({\n  isPresentInContract,\n  createNewGame,\n  setAlert,\n  isFilterGameToActive,\n  competition,\n  accounts,\n  game: {\n    team1Logo,\n    team2Logo,\n    description,\n    ended,\n    started,\n    team1Name,\n    team1Score,\n    team2Name,\n    team2Score,\n    winner,\n    start,\n    id,\n  },\n}) => {\n  const classes = useStyles();\n  // access component hooks to deal with favorites actions\n  const { favorites, setFavorites, isFavorite, handleAddFavorite } =\n    useFavorites(id);\n\n  // Access custom hooks to display errors and loading animations\n  const { state, ErrorComponent, LoadingAnimation } = useComponentState();\n\n  const [expanded, setExpanded] = useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  if (state.status === \"loading\") return <LoadingAnimation />;\n  else {\n    return (\n      <Card className={classes.root}>\n        {state.status === \"loaded\" ? (\n          <>\n            <GameCardHeader\n              game={{\n                team1Logo,\n                team2Logo,\n                description,\n                ended,\n                started,\n                team1Name,\n                team1Score,\n                team2Name,\n                team2Score,\n                winner,\n                start,\n                id,\n              }}\n              competition={competition}\n              isPresentInContract={isPresentInContract}\n            />\n            <GameCardMedia\n              game={{\n                team1Logo,\n                team2Logo,\n                description,\n                ended,\n                started,\n                team1Name,\n                team1Score,\n                team2Name,\n                team2Score,\n                winner,\n                start,\n                id,\n              }}\n            />\n            <GameCardContent\n              game={{\n                team1Logo,\n                team2Logo,\n                description,\n                ended,\n                started,\n                team1Name,\n                team1Score,\n                team2Name,\n                team2Score,\n                winner,\n                start,\n                id,\n              }}\n            />\n            <CardActionBar\n              handleAddFavorite={handleAddFavorite}\n              isFavorite={isFavorite}\n              handleExpandClick={handleExpandClick}\n              expanded={expanded}\n              gameId={id}\n              isPresentInContract={isPresentInContract}\n            />\n            <GameCardAdminCollapse\n              competition={competition}\n              createNewGame={createNewGame}\n              expanded={expanded}\n              setAlert={setAlert}\n              game={{\n                team1Logo,\n                team2Logo,\n                description,\n                ended,\n                started,\n                team1Name,\n                team1Score,\n                team2Name,\n                team2Score,\n                winner,\n                start,\n                id,\n              }}\n              isPresentInContract={isPresentInContract}\n            />\n          </>\n        ) : (\n          state.status === \"error\" && <ErrorComponent />\n        )}\n      </Card>\n    );\n  }\n};\n\nexport default GameCardAdmin;\n","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/PanelIcon/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/icons/MetamaskIcon/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/icons/CoinIcon/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/icons/TrophyIcon/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/pages/Home/helpers.js",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/hooks/index.js",["202","203","204"],"import { useEffect, useState, useContext, useRef } from \"react\";\nimport config from \"../config/index.json\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport LoadingAnimation from \"../components/LoadingAnimation/index\";\nimport { ErrorComponent, ErrorPage } from \"../components/Error/index\";\nimport Context from \"../context/index\";\n\n// make web3 provider and accounts available for component using this hook\nconst useProvider = (setState) => {\n  const [provider, setProvider] = useState();\n  const [accounts, setAccounts] = useState();\n\n  useEffect(() => {\n    const getAndSetAccounts = async (web3) => {\n      const accounts = await web3.eth.getAccounts();\n      if (accounts.length > 0) {\n        setAccounts(accounts);\n      } else {\n        setState({ status: \"error\", code: 499 });\n      }\n    };\n\n    const getAndSetProvider = async () => {\n      if (process.env.NODE_ENV === \"development\") {\n        const web3 = new Web3(config.provider_url);\n        setProvider(web3);\n        web3 && getAndSetAccounts(web3);\n      } else {\n        const provider = await detectEthereumProvider();\n        if (provider) {\n          const web3 = new Web3(provider);\n          setProvider(web3);\n          web3 && getAndSetAccounts(web3);\n        } else {\n          setState({ status: \"error\", code: 499 });\n        }\n      }\n    };\n\n    getAndSetProvider();\n  }, [setState]);\n\n  return {\n    provider,\n    setProvider,\n    accounts,\n    setAccounts,\n  };\n};\n\n// make available state setState, LoadingAnimation and error to components implementing this hook\nconst useComponentState = () => {\n  const [isModalToogled, setModalToogled] = useState(false);\n  const [alert, setAlert] = useState({\n    toogled: false,\n    message: \"\",\n    type: \"error\",\n  });\n  const [state, setState] = useState({\n    status: \"loaded\",\n    code: null,\n  });\n\n  return {\n    alert,\n    setAlert,\n    setState,\n    state,\n    isModalToogled,\n    setModalToogled,\n    LoadingAnimation,\n    ErrorPage,\n    ErrorComponent,\n  };\n};\n\nconst useMediaLoaded = (dependenciesArr) => {\n  const media1 = useRef();\n  const media2 = useRef();\n  const [mediaLoaded, setMediaLoaded] = useState(true);\n  useEffect(() => {\n    if (media1 && media2 && media1.current && media2.current) {\n      setMediaLoaded(media1.current.complete && media2.current.complete);\n    }\n  }, [...dependenciesArr, media1, media2]);\n\n  return {\n    media1,\n    media2,\n    mediaLoaded,\n  };\n};\n\nconst useFavorites = (id) => {\n  const { favorites, setFavorites } = useContext(Context);\n  const [isFavorite, setIsFavorite] = useState();\n\n  useEffect(() => {\n    if (id) {\n      const favoriteId = favorites.find((gameId) => gameId === id);\n      favoriteId ? setIsFavorite(true) : setIsFavorite(false);\n    }\n  }, [id]);\n\n  const handleAddFavorite = (id) => {\n    if (!isFavorite) {\n      setIsFavorite(true);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify([...favorites, id]));\n      setFavorites([...favorites, id]);\n    } else {\n      setIsFavorite(false);\n      const newFavorites = favorites.filter((id) => id !== id);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify(newFavorites));\n      setFavorites(newFavorites);\n    }\n  };\n\n  return {\n    favorites,\n    setFavorites,\n    isFavorite,\n    handleAddFavorite,\n  };\n};\n\nexport { useProvider, useComponentState, useMediaLoaded, useFavorites };\n","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/icons/PageNotFound/index.js",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/FiltersArea/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/Menu/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/RoutingMenuContent/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/CompetitonFilterMenuContent/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/icons/ServerError/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/icons/Forbidden/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/utils/index.js",["205"],"const unique = (arr) => {\n  const mapping = {};\n  arr.map((e, i) => {\n    if (!mapping[e]) {\n      mapping[e] = 1;\n    }\n  });\n  return Object.keys(mapping);\n};\n\nconst sum = (bets) =>\n  bets.reduce((prev, next) => prev + parseInt(next.amount), 0);\n\n\n\n\nexport {sum, unique}\n","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/GameCardAdmin/GameCardAdminCollapse/index.jsx",["206","207"],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/GameCard/GameCardHeader/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/GameCard/GameCardContent/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/GameCard/index.jsx",["208","209","210","211"],"import React, { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useComponentState, useFavorites } from \"../../hooks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Modal from \"../Modal/index\";\nimport BetForm from \"../BetForm/index\";\nimport CardActionBar from \"../CardActionBar\";\nimport { getBets } from \"./helper.js\";\nimport GameCardCollapse from \"./GameCardCollapse/index\";\nimport GameCardHeader from \"./GameCardHeader/index\";\nimport GameCardContent from \"./GameCardContent/index\";\nimport GameCardMedia from \"./GameCardMedia/index\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: \"left\",\n    padding: 16,\n    justifyContent: \"space-between\",\n    \"& h5\": {\n      fontWeight: 700,\n    },\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  gameName: {\n    marginBottom: 8,\n  },\n}));\n\nconst GameCard = ({\n  newBetPresent,\n  refreshGamesCounter,\n  competition,\n  bettingContract,\n  accounts,\n  game: {\n    team1Logo,\n    team2Logo,\n    description,\n    ended,\n    started,\n    team1Name,\n    team1Score,\n    team2Name,\n    team2Score,\n    winner,\n    start,\n    id,\n  },\n}) => {\n  // component styles\n  const classes = useStyles();\n\n  // Access custom hooks to display errors and loading animations\n  const {\n    state,\n    setState,\n    ErrorComponent,\n    LoadingAnimation,\n    isModalToogled,\n    setModalToogled,\n  } = useComponentState();\n\n  // access component hooks to deal with favorites actions\n  const { favorites, setFavorites, isFavorite, handleAddFavorite } =\n    useFavorites(id);\n\n  const [bets, setBets] = useState(null);\n\n  useEffect(() => {\n    const getAndSetBets = async (bettingContract, id) => {\n      try {\n        const _bets = await getBets(bettingContract, id);\n        setBets(_bets);\n      } catch (error) {\n        console.log(error);\n        setState({ status: \"error\", code: 500 });\n      }\n    };\n    if (id) {\n      getAndSetBets(bettingContract, id);\n    }\n  }, [isModalToogled, refreshGamesCounter]);\n\n  const [cardAlertMessage, setCardAlertMessage] = useState(null);\n  useEffect(() => {\n    setCardAlertMessage(\"New bet sent to contract\");\n\n    setTimeout(() => {\n      setCardAlertMessage(\"\");\n    }, 6000);\n  }, [refreshGamesCounter]);\n\n  const [expanded, setExpanded] = React.useState(false);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  if (state.status === \"loading\") return <LoadingAnimation />;\n  else {\n    return (\n      <>\n        <Card className={classes.root}>\n          {state.status === \"loaded\" ? (\n            <>\n              <GameCardHeader\n                newBetPresent={newBetPresent}\n                cardAlertMessage={cardAlertMessage}\n                game={{\n                  team1Logo,\n                  team2Logo,\n                  description,\n                  ended,\n                  started,\n                  team1Name,\n                  team1Score,\n                  team2Name,\n                  team2Score,\n                  winner,\n                  start,\n                  id,\n                }}\n                competition={competition}\n              />\n\n              <GameCardMedia\n                game={{\n                  team1Logo,\n                  team2Logo,\n                  description,\n                  ended,\n                  started,\n                  team1Name,\n                  team1Score,\n                  team2Name,\n                  team2Score,\n                  winner,\n                  start,\n                  id,\n                }}\n              />\n\n              <GameCardContent\n                game={{\n                  team1Logo,\n                  team2Logo,\n                  description,\n                  ended,\n                  started,\n                  team1Name,\n                  team1Score,\n                  team2Name,\n                  team2Score,\n                  winner,\n                  start,\n                  id,\n                }}\n              />\n              <CardActionBar\n                handleAddFavorite={handleAddFavorite}\n                isFavorite={isFavorite}\n                handleExpandClick={handleExpandClick}\n                expanded={expanded}\n                gameId={id}\n              />\n              <GameCardCollapse\n                competition={competition}\n                expanded={expanded}\n                setModalToogled={setModalToogled}\n                game={{\n                  team1Logo,\n                  team2Logo,\n                  description,\n                  ended,\n                  started,\n                  team1Name,\n                  team1Score,\n                  team2Name,\n                  team2Score,\n                  winner,\n                  start,\n                  id,\n                }}\n                betStats={bets?.betStats}\n              />\n            </>\n          ) : (\n            state.status === \"error\" && <ErrorComponent />\n          )}\n        </Card>\n        {isModalToogled &&\n          ReactDOM.createPortal(\n            <Modal\n              component={BetForm}\n              title={`Place a bet on :`}\n              buttonLabel=\"confirm\"\n              setModalToogled={setModalToogled}\n              game={{\n                team1Logo,\n                team2Logo,\n                description,\n                ended,\n                started,\n                team1Name,\n                team1Score,\n                team2Name,\n                team2Score,\n                winner,\n                start,\n                id,\n              }}\n              bettingContract={bettingContract}\n              accounts={accounts}\n            />,\n            document.querySelector(\"body\")\n          )}\n      </>\n    );\n  }\n};\n\nexport default GameCard;\n","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/MainMetrics/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/LoadingAnimation/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/icons/ImagePlaceholder/index.jsx",["212"],"import React from 'react';\nimport imagePlaceholder from './src/image_placeholder.png';\nimport { makeStyles } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(() => ({\n    rounded: {\n        borderRadius: 8\n    },\n    rounded0: {\n        borderRadius: 0\n    }\n}))\n\nconst ImagePlaceholder = ({ rounded, height, width }) => {\n    const classes = useStyles();\n    return <img className={rounded ? classes.rounded : classes.rounded0} src={imagePlaceholder} height={height} width={width} alt=\"image not loaded\" />;\n}\n\nexport default ImagePlaceholder;","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/CardActionBar/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/FiltersArea/ActiveFilters/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/SimpleSelect/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/GameCard/helper.js",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/GameCard/GameCardCollapse/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/BetForm/index.jsx",["213","214","215"],"import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useComponentState } from \"../../hooks\";\nimport GameCardMedia from \"../GameCard/GameCardMedia/index\";\nimport SnackBar from \"../SnackBar.index\";\nimport ModalClosePanel from \"../ModalClosePanel/index\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport clsx from \"clsx\";\nimport capitalize from \"capitalize\";\nimport {\n  Grid,\n  makeStyles,\n  TextField,\n  Typography,\n  Button,\n  Hidden,\n  MenuItem,\n  Select,\n  InputLabel,\n  FormControl,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  containerFlex: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  textfield: {\n    marginTop: \"1rem\",\n    marginBottom: \"1rem\",\n    width: \"100%\",\n  },\n  button: {\n    marginTop: \"1rem\",\n    width: \"100%\",\n  },\n  formLg: {\n    borderRadius: \"4px\",\n  },\n  form: {\n    padding: 24,\n    minHeight: \"100%\",\n  },\n  formContainer: {\n    width: \"100%\",\n    backgroundColor: \"#FFF\",\n  },\n  formContainerSm: {\n    minHeight: \"100%\",\n    top: \"4rem\",\n    position: \"relative\",\n  },\n  title: {\n    marginBottom: \"1rem\",\n  },\n  backPanel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  backArrow: {\n    marginBottom: 24,\n    marginRight: 8,\n    cursor: \"pointer\",\n  },\n  media: {\n    width: \"100%\",\n  },\n  formControl: {\n    width: \"100%\",\n  },\n  formLabel: {\n    paddingTop: \"1rem\",\n  },\n}));\n\nconst BetForm = ({\n  title,\n  buttonLabel,\n  setModalToogled,\n  bettingContract,\n  accounts,\n  game: {\n    team1Logo,\n    team2Logo,\n    description,\n    ended,\n    started,\n    team1Name,\n    team1Score,\n    team2Name,\n    team2Score,\n    winner,\n    id,\n  },\n}) => {\n  const { alert, setAlert } = useComponentState();\n  const matches = useMediaQuery(\"(max-width:600px)\");\n  const classes = useStyles();\n  const [formData, setFormData] = useState({\n    betSide: {\n      value: \"\",\n      helperText: \"\",\n      error: false,\n    },\n    betValue: {\n      value: \"\",\n      error: false,\n    },\n    isValid: false,\n  });\n  const validateFields = (event) => {\n    fields.map((field) => {\n      if (event.target.name === field.name) {\n        const newFormData = {\n          ...formData,\n          [field.name]: {\n            value: event.target.value,\n            error: event.target.value === \"\",\n            helperText: \"Required\",\n          },\n        };\n        let formIsValid = true;\n        for (const key in newFormData) {\n          if (newFormData[key].value === \"\") {\n            formIsValid = false;\n          }\n        }\n        setFormData({ ...newFormData, isValid: formIsValid });\n      }\n    });\n  };\n\n  useEffect(() => {\n    setAlert({\n      toogled: true,\n      message: \"Please fill out the form to place your bet\",\n      type: \"info\",\n    });\n  }, []);\n\n  const fields = [\n    {\n      label: \"choose your side\",\n      type: \"select\",\n      labelId: \"Choose your side\",\n      id: \"betSide\",\n      name: \"betSide\",\n      value: \"\",\n      items: [\n        { id: 1, name: team1Name?.toUpperCase(), disabled: false },\n        { id: 0, name: \"NULL\", disabled: false },\n        { id: 2, name: team2Name?.toUpperCase(), disabled: false },\n      ],\n      onChange: (event) => {\n        validateFields(event);\n      },\n      required: true,\n    },\n    {\n      type: \"number\",\n      error: \"\",\n      required: true,\n      readOnly: false,\n      helperText: \"\",\n      label: \"Bet amount\",\n      id: \"betValue\",\n      name: \"betValue\",\n      onInput: (event) => {\n        validateFields(event);\n      },\n    },\n  ];\n\n  const handleSubmit = async () => {\n    if (formData.isValid) {\n      try {\n        await bettingContract.methods.bet(id, formData.betSide.value).send({\n          from: accounts[0],\n          value: bettingContract.utils.toWei(\n            formData.betValue.value.toString()\n          ),\n        });\n        setAlert({\n          toogled: true,\n          message:\n            \"Your bet has been sent to the contract ! Have Game and may the odds be ever in your favor\",\n          type: \"success\",\n        });\n      } catch (error) {\n        console.log(error);\n        setAlert({\n          toogled: true,\n          message: \"We encoutered an unexpected error, please try again\",\n          type: \"error\",\n        });\n      }\n    } else {\n      setAlert({\n        toogled: true,\n        message: \"form is invalid, please fill the required inputs\",\n        type: \"error\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Grid container className={classes.root}>\n        <Hidden mdDown>\n          <Grid item lg={4}></Grid>\n        </Hidden>\n        <Grid item xs={12} lg={4} className={classes.containerFlex}>\n          <div\n            className={\n              matches\n                ? clsx(classes.formContainer, classes.formContainerSm)\n                : classes.formContainer\n            }\n          >\n            <GameCardMedia\n              game={{\n                team1Logo,\n                team2Logo,\n                description,\n                ended,\n                started,\n                team1Name,\n                team1Score,\n                team2Name,\n                team2Score,\n                winner,\n                id,\n              }}\n            />\n            <form\n              noValidate\n              autoComplete=\"off\"\n              className={\n                matches ? classes.form : clsx(classes.form, classes.formLg)\n              }\n            >\n              <ModalClosePanel setModalToogled={setModalToogled} />\n              <Typography variant=\"h4\" component=\"h1\" className={classes.title}>\n                {title} {capitalize(team1Name)} vs {capitalize(team2Name)}\n              </Typography>\n              {fields.map((field) =>\n                field.type === \"number\" ? (\n                  <FormControl\n                    variant=\"outlined\"\n                    className={classes.formControl}\n                    key={field.id}\n                  >\n                    <TextField\n                      id={field.id}\n                      variant=\"outlined\"\n                      className={classes.textfield}\n                      required={field.required}\n                      readOnly={field.readOnly}\n                      error={formData[field.id].error}\n                      helperText={formData[field.id].helperText}\n                      type={field.type}\n                      value={formData[field.id].value}\n                      onInput={field.onInput}\n                      name={field.name}\n                      label={field.label}\n                    />\n                  </FormControl>\n                ) : (\n                  field.type === \"select\" && (\n                    <FormControl\n                      variant=\"outlined\"\n                      className={classes.formControl}\n                      key={field.id}\n                    >\n                      <InputLabel htmlFor={field.labelId}>\n                        {capitalize(field.label)}\n                      </InputLabel>\n                      <Select\n                        labelId={field.labelId}\n                        id={field.id}\n                        name={field.name}\n                        value={formData[field.id].value}\n                        onChange={field.onChange}\n                        className={classes.textfield}\n                        error={formData[field.id].error}\n                      >\n                        {field.items?.map((item) => (\n                          <MenuItem\n                            key={`game-${item.id}`}\n                            key={item.id}\n                            value={item.id}\n                            disabled={item.disabled}\n                          >\n                            {item.name}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  )\n                )\n              )}\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className={classes.button}\n                size=\"large\"\n                onClick={handleSubmit}\n                disabled={!formData.isValid}\n              >\n                {buttonLabel}\n              </Button>\n            </form>\n          </div>\n        </Grid>\n\n        <Hidden mdDown>\n          <Grid item lg={4}></Grid>\n        </Hidden>\n      </Grid>\n\n      {alert.toogled &&\n        ReactDOM.createPortal(\n          <SnackBar\n            message={alert.message}\n            type={alert.type}\n            setAlert={setAlert}\n          />,\n          document.querySelector(\"body\")\n        )}\n    </>\n  );\n};\n\nexport default BetForm;\n","/home/kstwa/Documents/SportsOnTheBlock/client/src/components/Modal/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/ModalClosePanel/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/CreateCompetitionZone/index.jsx",["216","217"],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/CardCompetition/index.jsx",["218","219","220","221","222"],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/GameCard/GameCardMedia/index.jsx",[],"/home/kstwa/Documents/SportsOnTheBlock/client/src/components/CardAlert/index.jsx",[],{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":85,"column":6,"nodeType":"229","endLine":85,"endColumn":51,"suggestions":"230"},{"ruleId":"227","severity":1,"message":"231","line":107,"column":6,"nodeType":"229","endLine":107,"endColumn":38,"suggestions":"232"},{"ruleId":"227","severity":1,"message":"233","line":132,"column":6,"nodeType":"229","endLine":132,"endColumn":41,"suggestions":"234"},{"ruleId":"227","severity":1,"message":"235","line":77,"column":6,"nodeType":"229","endLine":77,"endColumn":54,"suggestions":"236"},{"ruleId":"227","severity":1,"message":"237","line":123,"column":6,"nodeType":"229","endLine":129,"endColumn":4,"suggestions":"238"},{"ruleId":"239","severity":1,"message":"240","line":1,"column":10,"nodeType":"241","messageId":"242","endLine":1,"endColumn":19},{"ruleId":"239","severity":1,"message":"243","line":1,"column":17,"nodeType":"241","messageId":"242","endLine":1,"endColumn":23},{"ruleId":"239","severity":1,"message":"244","line":64,"column":11,"nodeType":"241","messageId":"242","endLine":64,"endColumn":20},{"ruleId":"239","severity":1,"message":"245","line":64,"column":22,"nodeType":"241","messageId":"242","endLine":64,"endColumn":34},{"ruleId":"227","severity":1,"message":"246","line":86,"column":7,"nodeType":"247","endLine":86,"endColumn":25},{"ruleId":"227","severity":1,"message":"248","line":104,"column":6,"nodeType":"229","endLine":104,"endColumn":10,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":113,"column":53,"nodeType":"252","messageId":"253","endLine":113,"endColumn":62},{"ruleId":"254","severity":1,"message":"255","line":3,"column":18,"nodeType":"256","messageId":"257","endLine":3,"endColumn":20},{"ruleId":"239","severity":1,"message":"258","line":4,"column":3,"nodeType":"241","messageId":"242","endLine":4,"endColumn":13},{"ruleId":"239","severity":1,"message":"259","line":9,"column":8,"nodeType":"241","messageId":"242","endLine":9,"endColumn":18},{"ruleId":"239","severity":1,"message":"243","line":1,"column":38,"nodeType":"241","messageId":"242","endLine":1,"endColumn":44},{"ruleId":"239","severity":1,"message":"244","line":74,"column":11,"nodeType":"241","messageId":"242","endLine":74,"endColumn":20},{"ruleId":"239","severity":1,"message":"245","line":74,"column":22,"nodeType":"241","messageId":"242","endLine":74,"endColumn":34},{"ruleId":"227","severity":1,"message":"260","line":92,"column":6,"nodeType":"229","endLine":92,"endColumn":43,"suggestions":"261"},{"ruleId":"262","severity":1,"message":"263","line":17,"column":12,"nodeType":"264","endLine":17,"endColumn":152},{"ruleId":"254","severity":1,"message":"255","line":115,"column":24,"nodeType":"256","messageId":"257","endLine":115,"endColumn":26},{"ruleId":"227","severity":1,"message":"265","line":142,"column":6,"nodeType":"229","endLine":142,"endColumn":8,"suggestions":"266"},{"ruleId":"267","severity":1,"message":"268","line":293,"column":29,"nodeType":"269","messageId":"270","endLine":293,"endColumn":42},{"ruleId":"239","severity":1,"message":"271","line":4,"column":10,"nodeType":"241","messageId":"242","endLine":4,"endColumn":27},{"ruleId":"227","severity":1,"message":"272","line":47,"column":6,"nodeType":"229","endLine":47,"endColumn":8,"suggestions":"273"},{"ruleId":"239","severity":1,"message":"274","line":1,"column":17,"nodeType":"241","messageId":"242","endLine":1,"endColumn":25},{"ruleId":"239","severity":1,"message":"275","line":1,"column":27,"nodeType":"241","messageId":"242","endLine":1,"endColumn":36},{"ruleId":"239","severity":1,"message":"276","line":3,"column":3,"nodeType":"241","messageId":"242","endLine":3,"endColumn":7},{"ruleId":"239","severity":1,"message":"277","line":44,"column":11,"nodeType":"241","messageId":"242","endLine":44,"endColumn":22},{"ruleId":"239","severity":1,"message":"278","line":47,"column":13,"nodeType":"241","messageId":"242","endLine":47,"endColumn":15},"no-native-reassign",["279"],"no-negated-in-lhs",["280"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setState'. Either include it or remove the dependency array. Outer scope values like 'oracle_contract_address' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["281"],"React Hook useEffect has missing dependencies: 'bettingContract.contract.methods' and 'setState'. Either include them or remove the dependency array.",["282"],"React Hook useEffect has missing dependencies: 'bettingContract.contract.methods', 'setAlert', and 'setState'. Either include them or remove the dependency array.",["283"],"React Hook useEffect has a missing dependency: 'setState'. Either include it or remove the dependency array.",["284"],"React Hook useEffect has missing dependencies: 'refreshCompetitionsCounter' and 'setState'. Either include them or remove the dependency array. You can also do a functional update 'setRefresCompetitionsCounter(r => ...)' if you only need 'refreshCompetitionsCounter' in the 'setRefresCompetitionsCounter' call.",["285"],"no-unused-vars","'api_token' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'favorites' is assigned a value but never used.","'setFavorites' is assigned a value but never used.","React Hook useEffect has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement","React Hook useEffect has a missing dependency: 'favorites'. Either include it or remove the dependency array.",["286"],"no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Typography' is defined but never used.","'capitalize' is defined but never used.","React Hook useEffect has missing dependencies: 'bettingContract', 'id', and 'setState'. Either include them or remove the dependency array.",["287"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'setAlert'. Either include it or remove the dependency array.",["288"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useComponentState' is defined but never used.","React Hook useEffect has a missing dependency: 'bettingContract'. Either include it or remove the dependency array.",["289"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Card' is defined but never used.","'mediaLoaded' is assigned a value but never used.","'tx' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},"Update the dependencies array to be: [provider, accounts, setState]",{"range":"308","text":"309"},"Update the dependencies array to be: [refreshCounter, oracleContract, bettingContract.contract.methods, setState]",{"range":"310","text":"311"},"Update the dependencies array to be: [bettingContract.contract.methods, competition, isFilterGameToActive, setAlert, setState]",{"range":"312","text":"313"},"Update the dependencies array to be: [provider, accounts, refreshCompetitionsCounter, setState]",{"range":"314","text":"315"},"Update the dependencies array to be: [competitions, competition, bettingContract, isFilterGameToActive, refreshGamesCounter, setState, refreshCompetitionsCounter]",{"range":"316","text":"317"},"Update the dependencies array to be: [favorites, id]",{"range":"318","text":"319"},"Update the dependencies array to be: [bettingContract, id, isModalToogled, refreshGamesCounter, setState]",{"range":"320","text":"321"},"Update the dependencies array to be: [setAlert]",{"range":"322","text":"323"},"Update the dependencies array to be: [bettingContract]",{"range":"324","text":"325"},[2998,3043],"[provider, accounts, setState]",[3804,3836],"[refreshCounter, oracleContract, bettingContract.contract.methods, setState]",[4763,4798],"[bettingContract.contract.methods, competition, isFilterGameToActive, setAlert, setState]",[2565,2613],"[provider, accounts, refreshCompetitionsCounter, setState]",[4111,4223],"[competitions, competition, bettingContract, isFilterGameToActive, refreshGamesCounter, setState, refreshCompetitionsCounter]",[2785,2789],"[favorites, id]",[2211,2248],"[bettingContract, id, isModalToogled, refreshGamesCounter, setState]",[2846,2848],"[setAlert]",[1308,1310],"[bettingContract]"]
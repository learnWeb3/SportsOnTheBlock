[{"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/index.js":"1","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/app.jsx":"2","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Faq/index.jsx":"3","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/context/index.js":"4","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/Error/index.jsx":"5","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Dashboard/index.jsx":"6","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/NavBar/index.jsx":"7","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/PanelIcon/index.jsx":"8","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/CoinIcon/index.jsx":"9","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/TrophyIcon/index.jsx":"10","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/MetamaskIcon/index.jsx":"11","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/services/Contract.js":"12","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/PageNotFound/index.js":"13","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/ServerError/index.jsx":"14","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/Forbidden/index.jsx":"15","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/hooks/index.js":"16","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/FiltersArea/index.jsx":"17","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/index.jsx":"18","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/MainMetrics/index.jsx":"19","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/CompetitonFilterMenuContent/index.jsx":"20","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/RoutingMenuContent/index.jsx":"21","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/LoadingAnimation/index.jsx":"22","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/BetForm/index.jsx":"23","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/CardActionBar/index.jsx":"24","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/ModalClosePanel/index.jsx":"25","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/FiltersArea/ActiveFilters/index.jsx":"26","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/SimpleSelect/index.jsx":"27","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/Menu/index.jsx":"28","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/Modal/index.jsx":"29","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/SnackBar.index.jsx":"30","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/utils/index.js":"31","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Dashboard/helpers.js":"32","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/helper.js":"33","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/GameCardCollapse/index.jsx":"34","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/GameCardContent/index.jsx":"35","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/GameCardHeader/index.jsx":"36"},{"size":147,"mtime":1623742394000,"results":"37","hashOfConfig":"38"},{"size":1319,"mtime":1625309916825,"results":"39","hashOfConfig":"38"},{"size":2899,"mtime":1625220822027,"results":"40","hashOfConfig":"38"},{"size":98,"mtime":1624899020000,"results":"41","hashOfConfig":"38"},{"size":2360,"mtime":1625310113343,"results":"42","hashOfConfig":"38"},{"size":4908,"mtime":1625310317177,"results":"43","hashOfConfig":"38"},{"size":1895,"mtime":1624796924000,"results":"44","hashOfConfig":"38"},{"size":2496,"mtime":1625220980137,"results":"45","hashOfConfig":"38"},{"size":228,"mtime":1623923524000,"results":"46","hashOfConfig":"38"},{"size":228,"mtime":1623923500000,"results":"47","hashOfConfig":"38"},{"size":244,"mtime":1623923482000,"results":"48","hashOfConfig":"38"},{"size":996,"mtime":1625235131273,"results":"49","hashOfConfig":"38"},{"size":285,"mtime":1624031186000,"results":"50","hashOfConfig":"38"},{"size":283,"mtime":1624031180000,"results":"51","hashOfConfig":"38"},{"size":267,"mtime":1624031334000,"results":"52","hashOfConfig":"38"},{"size":2014,"mtime":1625307900298,"results":"53","hashOfConfig":"38"},{"size":1223,"mtime":1624961590000,"results":"54","hashOfConfig":"38"},{"size":5982,"mtime":1625309517856,"results":"55","hashOfConfig":"38"},{"size":3692,"mtime":1623849072000,"results":"56","hashOfConfig":"38"},{"size":1831,"mtime":1624796970000,"results":"57","hashOfConfig":"38"},{"size":1300,"mtime":1625220921654,"results":"58","hashOfConfig":"38"},{"size":602,"mtime":1624032172000,"results":"59","hashOfConfig":"38"},{"size":8506,"mtime":1625306961120,"results":"60","hashOfConfig":"38"},{"size":1173,"mtime":1625214451955,"results":"61","hashOfConfig":"38"},{"size":880,"mtime":1624908214000,"results":"62","hashOfConfig":"38"},{"size":1001,"mtime":1624870364000,"results":"63","hashOfConfig":"38"},{"size":1215,"mtime":1625157317087,"results":"64","hashOfConfig":"38"},{"size":1225,"mtime":1623909836000,"results":"65","hashOfConfig":"38"},{"size":656,"mtime":1624891700000,"results":"66","hashOfConfig":"38"},{"size":620,"mtime":1625148166115,"results":"67","hashOfConfig":"38"},{"size":273,"mtime":1625233456273,"results":"68","hashOfConfig":"38"},{"size":3029,"mtime":1625303446950,"results":"69","hashOfConfig":"38"},{"size":1184,"mtime":1625304794288,"results":"70","hashOfConfig":"38"},{"size":2331,"mtime":1625306039606,"results":"71","hashOfConfig":"38"},{"size":652,"mtime":1625306176256,"results":"72","hashOfConfig":"38"},{"size":1110,"mtime":1625307410509,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1fvg3on",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/index.js",[],["150","151"],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/app.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Faq/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/context/index.js",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/Error/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Dashboard/index.jsx",["152","153","154"],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/NavBar/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/PanelIcon/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/CoinIcon/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/TrophyIcon/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/MetamaskIcon/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/services/Contract.js",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/PageNotFound/index.js",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/ServerError/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/Forbidden/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/hooks/index.js",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/FiltersArea/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/index.jsx",["155","156"],"import React, { useState, useEffect, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Context from \"../../context/index\";\nimport { server_root_path } from \"../../config/index.json\";\nimport { useComponentState } from \"../../hooks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport { CardMedia } from \"@material-ui/core\";\nimport capitalize from \"capitalize\";\nimport Modal from \"../Modal/index\";\nimport BetForm from \"../BetForm/index\";\nimport CardActionBar from \"../CardActionBar\";\nimport { getBets } from \"./helper.js\";\nimport GameCardCollapse from \"./GameCardCollapse/index\";\nimport GameCardHeader from \"./GameCardHeader/index\";\nimport GameCardContent from \"./GameCardContent/index\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: \"left\",\n    padding: 16,\n    justifyContent: \"space-between\",\n    \"& h5\": {\n      fontWeight: 700,\n    },\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  gameName: {\n    marginBottom: 8,\n  },\n}));\n\nconst GameCardDashBoard = ({\n  competition,\n  bettingContract,\n  accounts,\n  game: {\n    cover,\n    description,\n    ended,\n    started,\n    team1Name,\n    team1Score,\n    team2Name,\n    team2Score,\n    winner,\n    start,\n    id,\n  },\n}) => {\n  const classes = useStyles();\n  // Access custom hooks to display errors and loading animations\n  const {\n    state,\n    setState,\n    ErrorComponent,\n    LoadingAnimation,\n    isModalToogled,\n    setModalToogled,\n  } = useComponentState();\n  // 0- check if user favorite the current game\n  const { favorites, setFavorites } = useContext(Context);\n  const [isFavorite, setIsFavorite] = useState();\n  const [bets, setBets] = useState(null);\n\n  useEffect(() => {\n    const getAndSetBets = async (bettingContract, id) => {\n      try {\n        const _bets = await getBets(bettingContract, id);\n        setBets(_bets);\n      } catch (error) {\n        console.log(error);\n        setState({ status: \"error\", code: 500 });\n      }\n    };\n    if (id) {\n      const favoriteId = favorites.find((gameId) => gameId === id);\n      favoriteId ? setIsFavorite(true) : setIsFavorite(false);\n      getAndSetBets(bettingContract, id);\n    }\n  }, [id, isModalToogled]);\n\n  const handleAddFavorite = (id) => {\n    if (!isFavorite) {\n      setIsFavorite(true);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify([...favorites, id]));\n      setFavorites([...favorites, id]);\n    } else {\n      setIsFavorite(false);\n      const newFavorites = favorites.filter((id) => id !== id);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify(newFavorites));\n      setFavorites(newFavorites);\n    }\n  };\n\n  // 3- Transactions\n  const [expanded, setExpanded] = React.useState(false);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n    // setTransactions\n  };\n\n  if (state.status === \"loading\") return <LoadingAnimation />;\n  else {\n    return (\n      <>\n        <Card className={classes.root}>\n          {state.status === \"loaded\" ? (\n            <>\n              <GameCardHeader\n                game={{\n                  cover,\n                  description,\n                  ended,\n                  started,\n                  team1Name,\n                  team1Score,\n                  team2Name,\n                  team2Score,\n                  winner,\n                  start,\n                  id,\n                }}\n                competition={competition}\n              />\n              <CardMedia\n                image={server_root_path + cover}\n                className={classes.media}\n                title={`${capitalize(team1Name)} vs ${capitalize(team2Name)}`}\n              />\n              <GameCardContent\n                game={{\n                  cover,\n                  description,\n                  ended,\n                  started,\n                  team1Name,\n                  team1Score,\n                  team2Name,\n                  team2Score,\n                  winner,\n                  start,\n                  id,\n                }}\n              />\n              <CardActionBar\n                handleAddFavorite={handleAddFavorite}\n                isFavorite={isFavorite}\n                handleExpandClick={handleExpandClick}\n                expanded={expanded}\n                gameId={id}\n              />\n              <GameCardCollapse\n                expanded={expanded}\n                setModalToogled={setModalToogled}\n                game={{\n                  cover,\n                  description,\n                  ended,\n                  started,\n                  team1Name,\n                  team1Score,\n                  team2Name,\n                  team2Score,\n                  winner,\n                  start,\n                  id,\n                }}\n                betStats={bets?.betStats}\n              />\n            </>\n          ) : (\n            state.status === \"error\" && <ErrorComponent />\n          )}\n        </Card>\n        {isModalToogled &&\n          ReactDOM.createPortal(\n            <Modal\n              component={BetForm}\n              title={`Place a bet on :`}\n              buttonLabel=\"confirm\"\n              setModalToogled={setModalToogled}\n              game={{\n                cover,\n                description,\n                ended,\n                started,\n                team1Name,\n                team1Score,\n                team2Name,\n                team2Score,\n                winner,\n                start,\n                id,\n              }}\n              bettingContract={bettingContract}\n              accounts={accounts}\n            />,\n            document.querySelector(\"body\")\n          )}\n      </>\n    );\n  }\n};\n\nexport default GameCardDashBoard;\n","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/MainMetrics/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/CompetitonFilterMenuContent/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/RoutingMenuContent/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/LoadingAnimation/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/BetForm/index.jsx",["157","158","159"],"import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { server_root_path } from \"../../config/index.json\";\nimport { useComponentState } from \"../../hooks\";\nimport SnackBar from \"../SnackBar.index\";\nimport ModalClosePanel from \"../ModalClosePanel/index\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport clsx from \"clsx\";\nimport capitalize from \"capitalize\";\nimport {\n  Grid,\n  makeStyles,\n  TextField,\n  Typography,\n  Button,\n  Hidden,\n  MenuItem,\n  Select,\n  InputLabel,\n  FormControl,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  containerFlex: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  textfield: {\n    marginTop: \"1rem\",\n    marginBottom: \"1rem\",\n    width: \"100%\",\n  },\n  button: {\n    marginTop: \"1rem\",\n    width: \"100%\",\n  },\n  formLg: {\n    borderRadius: \"4px\",\n  },\n  form: {\n    padding: 24,\n    minHeight: \"100%\",\n  },\n  formContainer: {\n    width: \"100%\",\n    backgroundColor: \"#FFF\",\n  },\n  formContainerSm: {\n    minHeight: \"100%\",\n    top: \"4rem\",\n    position: \"relative\",\n  },\n  title: {\n    marginBottom: \"1rem\",\n  },\n  backPanel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  backArrow: {\n    marginBottom: 24,\n    marginRight: 8,\n    cursor: \"pointer\",\n  },\n  media: {\n    width: \"100%\",\n  },\n  formControl: {\n    width: \"100%\",\n  },\n  formLabel: {\n    paddingTop: \"1rem\",\n  },\n}));\n\nconst BetForm = ({\n  title,\n  buttonLabel,\n  setModalToogled,\n  bettingContract,\n  accounts,\n  game: {\n    cover,\n    description,\n    ended,\n    started,\n    team1Name,\n    team1Score,\n    team2Name,\n    team2Score,\n    winner,\n    id,\n  },\n}) => {\n  const { alert, setAlert } = useComponentState();\n  const matches = useMediaQuery(\"(max-width:600px)\");\n  const classes = useStyles();\n  const [formData, setFormData] = useState({\n    betSide: {\n      value: \"\",\n      helperText: \"\",\n      error: false,\n    },\n    betValue: {\n      value: \"\",\n      error: false,\n    },\n    isValid: false,\n  });\n  const validateFields = (event) => {\n    fields.map((field) => {\n      if (event.target.name === field.name) {\n        const newFormData = {\n          ...formData,\n          [field.name]: {\n            value: event.target.value,\n            error: event.target.value === \"\",\n            helperText: \"Required\",\n          },\n        };\n        let formIsValid = true;\n        for (const key in newFormData) {\n          if (newFormData[key].value === \"\") {\n            formIsValid = false;\n          }\n        }\n        setFormData({ ...newFormData, isValid: formIsValid });\n      }\n    });\n  };\n\n  useEffect(() => {\n    setAlert({\n      toogled: true,\n      message: \"Please fill out the form to place your bet\",\n      type: \"info\",\n    });\n  }, []);\n\n  const fields = [\n    {\n      label: \"choose your side\",\n      type: \"select\",\n      labelId: \"Choose your side\",\n      id: \"betSide\",\n      name: \"betSide\",\n      value: \"\",\n      items: [\n        { id: 1, name: team1Name?.toUpperCase(), disabled: false },\n        { id: 0, name: \"NULL\", disabled: false },\n        { id: 2, name: team2Name?.toUpperCase(), disabled: false },\n      ],\n      onChange: (event) => {\n        validateFields(event);\n      },\n      required: true,\n    },\n    {\n      type: \"number\",\n      error: \"\",\n      required: true,\n      readOnly: false,\n      helperText: \"\",\n      label: \"Bet amount\",\n      id: \"betValue\",\n      name: \"betValue\",\n      onInput: (event) => {\n        validateFields(event);\n      },\n    },\n  ];\n\n  const handleSubmit = async () => {\n    if (formData.isValid) {\n      try {\n        await bettingContract.methods\n          .bet(id, formData.betSide.value)\n          .send({\n            from: accounts[0],\n            value: bettingContract.utils.toWei(\n              formData.betValue.value.toString()\n            ),\n          });\n        setAlert({\n          toogled: true,\n          message:\n            \"Your bet has been sent to the contract ! Have Game and may the odds be ever in your favor\",\n          type: \"success\",\n        });\n      } catch (error) {\n        console.log(error)\n        setAlert({\n          toogled: true,\n          message: \"We encoutered an unexpected error, please try again\",\n          type: \"error\",\n        });\n      }\n    } else {\n      setAlert({\n        toogled: true,\n        message: \"form is invalid, please fill the required inputs\",\n        type: \"error\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Grid container className={classes.root}>\n        <Hidden mdDown>\n          <Grid item lg={4}></Grid>\n        </Hidden>\n        <Grid item xs={12} lg={4} className={classes.containerFlex}>\n          <div\n            className={\n              matches\n                ? clsx(classes.formContainer, classes.formContainerSm)\n                : classes.formContainer\n            }\n          >\n            <img\n              src={server_root_path + cover}\n              alt=\"\"\n              className={classes.media}\n            />\n            <form\n              noValidate\n              autoComplete=\"off\"\n              className={\n                matches ? classes.form : clsx(classes.form, classes.formLg)\n              }\n            >\n              <ModalClosePanel setModalToogled={setModalToogled} />\n              <Typography variant=\"h4\" component=\"h1\" className={classes.title}>\n                {title} {capitalize(team1Name)} vs {capitalize(team2Name)}\n              </Typography>\n              {fields.map((field) =>\n                field.type === \"number\" ? (\n                  <FormControl\n                    variant=\"outlined\"\n                    className={classes.formControl}\n                    key={field.id}\n                  >\n                    <TextField\n                      id={field.id}\n                      variant=\"outlined\"\n                      className={classes.textfield}\n                      required={field.required}\n                      readOnly={field.readOnly}\n                      error={formData[field.id].error}\n                      helperText={formData[field.id].helperText}\n                      type={field.type}\n                      value={formData[field.id].value}\n                      onInput={field.onInput}\n                      name={field.name}\n                      label={field.label}\n                    />\n                  </FormControl>\n                ) : (\n                  field.type === \"select\" && (\n                    <FormControl\n                      variant=\"outlined\"\n                      className={classes.formControl}\n                      key={field.id}\n                    >\n                      <InputLabel htmlFor={field.labelId}>\n                        {capitalize(field.label)}\n                      </InputLabel>\n                      <Select\n                        labelId={field.labelId}\n                        id={field.id}\n                        name={field.name}\n                        value={formData[field.id].value}\n                        onChange={field.onChange}\n                        className={classes.textfield}\n                        error={formData[field.id].error}\n                      >\n                        {field.items?.map((item) => (\n                          <MenuItem\n                            key={`game-${item.id}`}\n                            key={item.id}\n                            value={item.id}\n                            disabled={item.disabled}\n                          >\n                            {item.name}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  )\n                )\n              )}\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className={classes.button}\n                size=\"large\"\n                onClick={handleSubmit}\n                disabled={!formData.isValid}\n              >\n                {buttonLabel}\n              </Button>\n            </form>\n          </div>\n        </Grid>\n\n        <Hidden mdDown>\n          <Grid item lg={4}></Grid>\n        </Hidden>\n      </Grid>\n\n      {alert.toogled &&\n        ReactDOM.createPortal(\n          <SnackBar\n            message={alert.message}\n            type={alert.type}\n            setAlert={setAlert}\n          />,\n          document.querySelector(\"body\")\n        )}\n    </>\n  );\n};\n\nexport default BetForm;\n","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/CardActionBar/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/ModalClosePanel/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/FiltersArea/ActiveFilters/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/SimpleSelect/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/Menu/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/Modal/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/SnackBar.index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/utils/index.js",["160"],"const unique = (arr) => {\n  const mapping = {};\n  arr.map((e, i) => {\n    if (!mapping[e]) {\n      mapping[e] = 1;\n    }\n  });\n  return Object.keys(mapping);\n};\n\nconst sum = (bets) =>\n  bets.reduce((prev, next) => prev + parseInt(next.amount), 0);\n\n\n\n\nexport {sum, unique}\n","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Dashboard/helpers.js",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/helper.js",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/GameCardCollapse/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/GameCardContent/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/GameCardHeader/index.jsx",[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":14,"column":3,"nodeType":"167","messageId":"168","endLine":14,"endColumn":19},{"ruleId":"169","severity":1,"message":"170","line":60,"column":6,"nodeType":"171","endLine":60,"endColumn":26,"suggestions":"172"},{"ruleId":"169","severity":1,"message":"170","line":77,"column":6,"nodeType":"171","endLine":77,"endColumn":72,"suggestions":"173"},{"ruleId":"169","severity":1,"message":"174","line":94,"column":6,"nodeType":"171","endLine":94,"endColumn":26,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":103,"column":53,"nodeType":"178","messageId":"179","endLine":103,"endColumn":62},{"ruleId":"180","severity":1,"message":"181","line":114,"column":24,"nodeType":"182","messageId":"183","endLine":114,"endColumn":26},{"ruleId":"169","severity":1,"message":"184","line":141,"column":6,"nodeType":"171","endLine":141,"endColumn":8,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":284,"column":29,"nodeType":"188","messageId":"189","endLine":284,"endColumn":42},{"ruleId":"180","severity":1,"message":"181","line":3,"column":18,"nodeType":"182","messageId":"183","endLine":3,"endColumn":20},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'subscibeToEvents' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setState'. Either include it or remove the dependency array.","ArrayExpression",["192"],["193"],"React Hook useEffect has missing dependencies: 'bettingContract', 'favorites', and 'setState'. Either include them or remove the dependency array.",["194"],"no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'setAlert'. Either include it or remove the dependency array.",["195"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [provider, accounts, setState]",{"range":"204","text":"205"},"Update the dependencies array to be: [competitions, competition, bettingContract, isFilterGameToActive, setState]",{"range":"206","text":"207"},"Update the dependencies array to be: [bettingContract, favorites, id, isModalToogled, setState]",{"range":"208","text":"209"},"Update the dependencies array to be: [setAlert]",{"range":"210","text":"211"},[2007,2027],"[provider, accounts, setState]",[2654,2720],"[competitions, competition, bettingContract, isFilterGameToActive, setState]",[2465,2485],"[bettingContract, favorites, id, isModalToogled, setState]",[2826,2828],"[setAlert]"]
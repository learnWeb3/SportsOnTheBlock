[{"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/index.js":"1","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/app.jsx":"2","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Faq/index.jsx":"3","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/context/index.js":"4","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/Error/index.jsx":"5","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Dashboard/index.jsx":"6","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/NavBar/index.jsx":"7","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/PanelIcon/index.jsx":"8","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/CoinIcon/index.jsx":"9","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/TrophyIcon/index.jsx":"10","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/MetamaskIcon/index.jsx":"11","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/services/Contract.js":"12","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/PageNotFound/index.js":"13","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/ServerError/index.jsx":"14","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/Forbidden/index.jsx":"15","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/hooks/index.js":"16","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/FiltersArea/index.jsx":"17","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/index.jsx":"18","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/MainMetrics/index.jsx":"19","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/CompetitonFilterMenuContent/index.jsx":"20","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/RoutingMenuContent/index.jsx":"21","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/LoadingAnimation/index.jsx":"22","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/BetForm/index.jsx":"23","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/CardActionBar/index.jsx":"24","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/ModalClosePanel/index.jsx":"25","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/FiltersArea/ActiveFilters/index.jsx":"26","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/SimpleSelect/index.jsx":"27","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/Menu/index.jsx":"28","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/Modal/index.jsx":"29","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/SnackBar.index.jsx":"30","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/utils/index.js":"31"},{"size":147,"mtime":1623742394000,"results":"32","hashOfConfig":"33"},{"size":1293,"mtime":1625220954893,"results":"34","hashOfConfig":"33"},{"size":2899,"mtime":1625220822027,"results":"35","hashOfConfig":"33"},{"size":98,"mtime":1624899020000,"results":"36","hashOfConfig":"33"},{"size":1433,"mtime":1625229106199,"results":"37","hashOfConfig":"33"},{"size":7241,"mtime":1625233556982,"results":"38","hashOfConfig":"33"},{"size":1895,"mtime":1624796924000,"results":"39","hashOfConfig":"33"},{"size":2496,"mtime":1625220980137,"results":"40","hashOfConfig":"33"},{"size":228,"mtime":1623923524000,"results":"41","hashOfConfig":"33"},{"size":228,"mtime":1623923500000,"results":"42","hashOfConfig":"33"},{"size":244,"mtime":1623923482000,"results":"43","hashOfConfig":"33"},{"size":996,"mtime":1625227893640,"results":"44","hashOfConfig":"33"},{"size":285,"mtime":1624031186000,"results":"45","hashOfConfig":"33"},{"size":283,"mtime":1624031180000,"results":"46","hashOfConfig":"33"},{"size":267,"mtime":1624031334000,"results":"47","hashOfConfig":"33"},{"size":1966,"mtime":1625229338897,"results":"48","hashOfConfig":"33"},{"size":1223,"mtime":1624961590000,"results":"49","hashOfConfig":"33"},{"size":9120,"mtime":1625233569606,"results":"50","hashOfConfig":"33"},{"size":3692,"mtime":1623849072000,"results":"51","hashOfConfig":"33"},{"size":1831,"mtime":1624796970000,"results":"52","hashOfConfig":"33"},{"size":1300,"mtime":1625220921654,"results":"53","hashOfConfig":"33"},{"size":602,"mtime":1624032172000,"results":"54","hashOfConfig":"33"},{"size":8479,"mtime":1625228862485,"results":"55","hashOfConfig":"33"},{"size":1173,"mtime":1625214451955,"results":"56","hashOfConfig":"33"},{"size":880,"mtime":1624908214000,"results":"57","hashOfConfig":"33"},{"size":1001,"mtime":1624870364000,"results":"58","hashOfConfig":"33"},{"size":1215,"mtime":1625157317087,"results":"59","hashOfConfig":"33"},{"size":1225,"mtime":1623909836000,"results":"60","hashOfConfig":"33"},{"size":656,"mtime":1624891700000,"results":"61","hashOfConfig":"33"},{"size":620,"mtime":1625148166115,"results":"62","hashOfConfig":"33"},{"size":273,"mtime":1625233456273,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1fvg3on",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/index.js",[],["128","129"],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/app.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Faq/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/context/index.js",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/Error/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Dashboard/index.jsx",["130"],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/NavBar/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/PanelIcon/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/CoinIcon/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/TrophyIcon/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/MetamaskIcon/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/services/Contract.js",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/PageNotFound/index.js",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/ServerError/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/Forbidden/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/hooks/index.js",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/FiltersArea/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/index.jsx",["131","132","133","134","135"],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/MainMetrics/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/CompetitonFilterMenuContent/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/RoutingMenuContent/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/LoadingAnimation/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/BetForm/index.jsx",["136","137","138"],"import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { server_root_path } from \"../../config/index.json\";\nimport { useComponentState } from \"../../hooks\";\nimport SnackBar from \"../SnackBar.index\";\nimport ModalClosePanel from \"../ModalClosePanel/index\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport clsx from \"clsx\";\nimport capitalize from \"capitalize\";\nimport {\n  Grid,\n  makeStyles,\n  TextField,\n  Typography,\n  Button,\n  Hidden,\n  MenuItem,\n  Select,\n  InputLabel,\n  FormControl,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  containerFlex: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  textfield: {\n    marginTop: \"1rem\",\n    marginBottom: \"1rem\",\n    width: \"100%\",\n  },\n  button: {\n    marginTop: \"1rem\",\n    width: \"100%\",\n  },\n  formLg: {\n    borderRadius: \"4px\",\n  },\n  form: {\n    padding: 24,\n    minHeight: \"100%\",\n  },\n  formContainer: {\n    width: \"100%\",\n    backgroundColor: \"#FFF\",\n  },\n  formContainerSm: {\n    minHeight: \"100%\",\n    top: \"4rem\",\n    position: \"relative\",\n  },\n  title: {\n    marginBottom: \"1rem\",\n  },\n  backPanel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  backArrow: {\n    marginBottom: 24,\n    marginRight: 8,\n    cursor: \"pointer\",\n  },\n  media: {\n    width: \"100%\",\n  },\n  formControl: {\n    width: \"100%\",\n  },\n  formLabel: {\n    paddingTop: \"1rem\",\n  },\n}));\n\nconst BetForm = ({\n  title,\n  buttonLabel,\n  setModalToogled,\n  bettingContract,\n  accounts,\n  game: {\n    cover,\n    description,\n    ended,\n    started,\n    team1Name,\n    team1Score,\n    team2Name,\n    team2Score,\n    winner,\n    id,\n  },\n}) => {\n  const { alert, setAlert } = useComponentState();\n  const matches = useMediaQuery(\"(max-width:600px)\");\n  const classes = useStyles();\n  const [formData, setFormData] = useState({\n    betSide: {\n      value: \"\",\n      helperText: \"\",\n      error: false,\n    },\n    betValue: {\n      value: \"\",\n      error: false,\n    },\n    isValid: false,\n  });\n  const validateFields = (event) => {\n    fields.map((field) => {\n      if (event.target.name === field.name) {\n        const newFormData = {\n          ...formData,\n          [field.name]: {\n            value: event.target.value,\n            error: event.target.value === \"\",\n            helperText: \"Required\",\n          },\n        };\n        let formIsValid = true;\n        for (const key in newFormData) {\n          if (newFormData[key].value === \"\") {\n            formIsValid = false;\n          }\n        }\n        setFormData({ ...newFormData, isValid: formIsValid });\n      }\n    });\n  };\n\n  useEffect(() => {\n    setAlert({\n      toogled: true,\n      message: \"Please fill out the form to place your bet\",\n      type: \"info\",\n    });\n  }, []);\n\n  const fields = [\n    {\n      label: \"choose your side\",\n      type: \"select\",\n      labelId: \"Choose your side\",\n      id: \"betSide\",\n      name: \"betSide\",\n      value: \"\",\n      items: [\n        { id: 1, name: team1Name?.toUpperCase(), disabled: false },\n        { id: 0, name: \"NULL\", disabled: false },\n        { id: 2, name: team2Name?.toUpperCase(), disabled: false },\n      ],\n      onChange: (event) => {\n        validateFields(event);\n      },\n      required: true,\n    },\n    {\n      type: \"number\",\n      error: \"\",\n      required: true,\n      readOnly: false,\n      helperText: \"\",\n      label: \"Bet amount\",\n      id: \"betValue\",\n      name: \"betValue\",\n      onInput: (event) => {\n        validateFields(event);\n      },\n    },\n  ];\n\n  const handleSubmit = async () => {\n    if (formData.isValid) {\n      try {\n        await bettingContract.methods\n          .bet(id, formData.betSide.value)\n          .send({\n            from: accounts[0],\n            value: bettingContract.utils.toWei(\n              formData.betValue.value.toString()\n            ),\n          });\n        setAlert({\n          toogled: true,\n          message:\n            \"Your bet has been sent to the contract ! Have Game and may the odds be ever in your favor\",\n          type: \"success\",\n        });\n      } catch (error) {\n        setAlert({\n          toogled: true,\n          message: \"We encoutered an unexpected error, please try again\",\n          type: \"error\",\n        });\n      }\n    } else {\n      setAlert({\n        toogled: true,\n        message: \"form is invalid, please fill the required inputs\",\n        type: \"error\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Grid container className={classes.root}>\n        <Hidden mdDown>\n          <Grid item lg={4}></Grid>\n        </Hidden>\n        <Grid item xs={12} lg={4} className={classes.containerFlex}>\n          <div\n            className={\n              matches\n                ? clsx(classes.formContainer, classes.formContainerSm)\n                : classes.formContainer\n            }\n          >\n            <img\n              src={server_root_path + cover}\n              alt=\"\"\n              className={classes.media}\n            />\n            <form\n              noValidate\n              autoComplete=\"off\"\n              className={\n                matches ? classes.form : clsx(classes.form, classes.formLg)\n              }\n            >\n              <ModalClosePanel setModalToogled={setModalToogled} />\n              <Typography variant=\"h4\" component=\"h1\" className={classes.title}>\n                {title} {capitalize(team1Name)} vs {capitalize(team2Name)}\n              </Typography>\n              {fields.map((field) =>\n                field.type === \"number\" ? (\n                  <FormControl\n                    variant=\"outlined\"\n                    className={classes.formControl}\n                    key={field.id}\n                  >\n                    <TextField\n                      id={field.id}\n                      variant=\"outlined\"\n                      className={classes.textfield}\n                      required={field.required}\n                      readOnly={field.readOnly}\n                      error={formData[field.id].error}\n                      helperText={formData[field.id].helperText}\n                      type={field.type}\n                      value={formData[field.id].value}\n                      onInput={field.onInput}\n                      name={field.name}\n                      label={field.label}\n                    />\n                  </FormControl>\n                ) : (\n                  field.type === \"select\" && (\n                    <FormControl\n                      variant=\"outlined\"\n                      className={classes.formControl}\n                      key={field.id}\n                    >\n                      <InputLabel htmlFor={field.labelId}>\n                        {capitalize(field.label)}\n                      </InputLabel>\n                      <Select\n                        labelId={field.labelId}\n                        id={field.id}\n                        name={field.name}\n                        value={formData[field.id].value}\n                        onChange={field.onChange}\n                        className={classes.textfield}\n                        error={formData[field.id].error}\n                      >\n                        {field.items?.map((item) => (\n                          <MenuItem\n                            key={`game-${item.id}`}\n                            key={item.id}\n                            value={item.id}\n                            disabled={item.disabled}\n                          >\n                            {item.name}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  )\n                )\n              )}\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className={classes.button}\n                size=\"large\"\n                onClick={handleSubmit}\n                disabled={!formData.isValid}\n              >\n                {buttonLabel}\n              </Button>\n            </form>\n          </div>\n        </Grid>\n\n        <Hidden mdDown>\n          <Grid item lg={4}></Grid>\n        </Hidden>\n      </Grid>\n\n      {alert.toogled &&\n        ReactDOM.createPortal(\n          <SnackBar\n            message={alert.message}\n            type={alert.type}\n            setAlert={setAlert}\n          />,\n          document.querySelector(\"body\")\n        )}\n    </>\n  );\n};\n\nexport default BetForm;\n","/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/CardActionBar/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/ModalClosePanel/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/FiltersArea/ActiveFilters/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/SimpleSelect/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/Menu/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/Modal/index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/SnackBar.index.jsx",[],"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/utils/index.js",["139"],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":65,"column":6,"nodeType":"146","endLine":65,"endColumn":26,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":23,"column":10,"nodeType":"150","messageId":"151","endLine":23,"endColumn":16},{"ruleId":"148","severity":1,"message":"152","line":97,"column":5,"nodeType":"150","messageId":"151","endLine":97,"endColumn":13},{"ruleId":"153","severity":1,"message":"154","line":141,"column":49,"nodeType":"155","messageId":"156","endLine":141,"endColumn":58},{"ruleId":"144","severity":1,"message":"157","line":145,"column":6,"nodeType":"146","endLine":145,"endColumn":26,"suggestions":"158"},{"ruleId":"153","severity":1,"message":"154","line":154,"column":53,"nodeType":"155","messageId":"156","endLine":154,"endColumn":62},{"ruleId":"159","severity":1,"message":"160","line":114,"column":24,"nodeType":"161","messageId":"162","endLine":114,"endColumn":26},{"ruleId":"144","severity":1,"message":"163","line":141,"column":6,"nodeType":"146","endLine":141,"endColumn":8,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":283,"column":29,"nodeType":"167","messageId":"168","endLine":283,"endColumn":42},{"ruleId":"159","severity":1,"message":"160","line":3,"column":18,"nodeType":"161","messageId":"162","endLine":3,"endColumn":20},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setState'. Either include it or remove the dependency array.","ArrayExpression",["171"],"no-unused-vars","'unique' is defined but never used.","Identifier","unusedVar","'setState' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","React Hook useEffect has missing dependencies: 'bettingContract.methods', 'bettingContract.utils', and 'favorites'. Either include them or remove the dependency array.",["172"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'setAlert'. Either include it or remove the dependency array.",["173"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [provider, accounts, setState]",{"range":"180","text":"181"},"Update the dependencies array to be: [bettingContract.methods, bettingContract.utils, favorites, id, isModalToogled]",{"range":"182","text":"183"},"Update the dependencies array to be: [setAlert]",{"range":"184","text":"185"},[2258,2278],"[provider, accounts, setState]",[3601,3621],"[bettingContract.methods, bettingContract.utils, favorites, id, isModalToogled]",[2826,2828],"[setAlert]"]
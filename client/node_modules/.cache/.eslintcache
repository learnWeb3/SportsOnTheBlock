[{"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/index.js":"1","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/app.jsx":"2","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Faq/index.jsx":"3","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/context/index.js":"4","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/NavBar/index.jsx":"5","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/Error/index.jsx":"6","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/PanelIcon/index.jsx":"7","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/CoinIcon/index.jsx":"8","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/TrophyIcon/index.jsx":"9","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/MetamaskIcon/index.jsx":"10","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/services/Contract.js":"11","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/PageNotFound/index.js":"12","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/Menu/index.jsx":"13","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/CompetitonFilterMenuContent/index.jsx":"14","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/RoutingMenuContent/index.jsx":"15","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/Forbidden/index.jsx":"16","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/ServerError/index.jsx":"17","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/utils/index.js":"18","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/hooks/index.js":"19","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/FiltersArea/index.jsx":"20","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/index.jsx":"21","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/MainMetrics/index.jsx":"22","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/LoadingAnimation/index.jsx":"23","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/GameCardContent/index.jsx":"24","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/helper.js":"25","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/GameCardHeader/index.jsx":"26","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/GameCardCollapse/index.jsx":"27","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/Modal/index.jsx":"28","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/BetForm/index.jsx":"29","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/CardActionBar/index.jsx":"30","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/FiltersArea/ActiveFilters/index.jsx":"31","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/SimpleSelect/index.jsx":"32","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/SnackBar.index.jsx":"33","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/ModalClosePanel/index.jsx":"34","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Home/index.jsx":"35","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Home/helpers.js":"36","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Admin/index.jsx":"37","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Admin/helpers.js":"38","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCardAdmin/index.jsx":"39"},{"size":147,"mtime":1623742394000,"results":"40","hashOfConfig":"41"},{"size":1424,"mtime":1625573563964,"results":"42","hashOfConfig":"41"},{"size":2899,"mtime":1625220822000,"results":"43","hashOfConfig":"41"},{"size":98,"mtime":1624899020000,"results":"44","hashOfConfig":"41"},{"size":1895,"mtime":1624796924000,"results":"45","hashOfConfig":"41"},{"size":2360,"mtime":1625310112000,"results":"46","hashOfConfig":"41"},{"size":2496,"mtime":1625220980000,"results":"47","hashOfConfig":"41"},{"size":228,"mtime":1623923524000,"results":"48","hashOfConfig":"41"},{"size":228,"mtime":1623923500000,"results":"49","hashOfConfig":"41"},{"size":244,"mtime":1623923482000,"results":"50","hashOfConfig":"41"},{"size":996,"mtime":1625235130000,"results":"51","hashOfConfig":"41"},{"size":285,"mtime":1624031186000,"results":"52","hashOfConfig":"41"},{"size":1225,"mtime":1623909836000,"results":"53","hashOfConfig":"41"},{"size":1831,"mtime":1624796970000,"results":"54","hashOfConfig":"41"},{"size":1300,"mtime":1625220920000,"results":"55","hashOfConfig":"41"},{"size":267,"mtime":1624031334000,"results":"56","hashOfConfig":"41"},{"size":283,"mtime":1624031180000,"results":"57","hashOfConfig":"41"},{"size":273,"mtime":1625233456000,"results":"58","hashOfConfig":"41"},{"size":2014,"mtime":1625307900000,"results":"59","hashOfConfig":"41"},{"size":1223,"mtime":1624961590000,"results":"60","hashOfConfig":"41"},{"size":5920,"mtime":1625573818082,"results":"61","hashOfConfig":"41"},{"size":3692,"mtime":1623849072000,"results":"62","hashOfConfig":"41"},{"size":602,"mtime":1624032172000,"results":"63","hashOfConfig":"41"},{"size":652,"mtime":1625306176000,"results":"64","hashOfConfig":"41"},{"size":1184,"mtime":1625304794000,"results":"65","hashOfConfig":"41"},{"size":1110,"mtime":1625307410000,"results":"66","hashOfConfig":"41"},{"size":2331,"mtime":1625306038000,"results":"67","hashOfConfig":"41"},{"size":656,"mtime":1624891700000,"results":"68","hashOfConfig":"41"},{"size":8506,"mtime":1625306960000,"results":"69","hashOfConfig":"41"},{"size":1173,"mtime":1625214450000,"results":"70","hashOfConfig":"41"},{"size":1001,"mtime":1624870364000,"results":"71","hashOfConfig":"41"},{"size":1215,"mtime":1625157316000,"results":"72","hashOfConfig":"41"},{"size":620,"mtime":1625148166000,"results":"73","hashOfConfig":"41"},{"size":880,"mtime":1624908214000,"results":"74","hashOfConfig":"41"},{"size":4956,"mtime":1625577296533,"results":"75","hashOfConfig":"41"},{"size":2244,"mtime":1625558266882,"results":"76","hashOfConfig":"41"},{"size":4878,"mtime":1625578566456,"results":"77","hashOfConfig":"41"},{"size":183,"mtime":1625577652795,"results":"78","hashOfConfig":"41"},{"size":5718,"mtime":1625576789055,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1cet826",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"82"},"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/index.js",[],["164","165"],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/app.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Faq/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/context/index.js",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/NavBar/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/Error/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/PanelIcon/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/CoinIcon/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/TrophyIcon/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/MetamaskIcon/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/services/Contract.js",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/PageNotFound/index.js",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/Menu/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/CompetitonFilterMenuContent/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/RoutingMenuContent/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/Forbidden/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/icons/ServerError/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/utils/index.js",["166"],"const unique = (arr) => {\n  const mapping = {};\n  arr.map((e, i) => {\n    if (!mapping[e]) {\n      mapping[e] = 1;\n    }\n  });\n  return Object.keys(mapping);\n};\n\nconst sum = (bets) =>\n  bets.reduce((prev, next) => prev + parseInt(next.amount), 0);\n\n\n\n\nexport {sum, unique}\n","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/hooks/index.js",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/FiltersArea/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/index.jsx",["167","168"],"import React, { useState, useEffect, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Context from \"../../context/index\";\nimport { server_root_path } from \"../../config/index.json\";\nimport { useComponentState } from \"../../hooks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport { CardMedia } from \"@material-ui/core\";\nimport capitalize from \"capitalize\";\nimport Modal from \"../Modal/index\";\nimport BetForm from \"../BetForm/index\";\nimport CardActionBar from \"../CardActionBar\";\nimport { getBets } from \"./helper.js\";\nimport GameCardCollapse from \"./GameCardCollapse/index\";\nimport GameCardHeader from \"./GameCardHeader/index\";\nimport GameCardContent from \"./GameCardContent/index\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: \"left\",\n    padding: 16,\n    justifyContent: \"space-between\",\n    \"& h5\": {\n      fontWeight: 700,\n    },\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  gameName: {\n    marginBottom: 8,\n  },\n}));\n\nconst GameCard = ({\n  competition,\n  bettingContract,\n  accounts,\n  game: {\n    cover,\n    description,\n    ended,\n    started,\n    team1Name,\n    team1Score,\n    team2Name,\n    team2Score,\n    winner,\n    start,\n    id,\n  },\n}) => {\n  const classes = useStyles();\n  // Access custom hooks to display errors and loading animations\n  const {\n    state,\n    setState,\n    ErrorComponent,\n    LoadingAnimation,\n    isModalToogled,\n    setModalToogled,\n  } = useComponentState();\n  // 0- check if user favorite the current game\n  const { favorites, setFavorites } = useContext(Context);\n  const [isFavorite, setIsFavorite] = useState();\n  const [bets, setBets] = useState(null);\n\n  useEffect(() => {\n    const getAndSetBets = async (bettingContract, id) => {\n      try {\n        const _bets = await getBets(bettingContract, id);\n        setBets(_bets);\n      } catch (error) {\n        console.log(error);\n        setState({ status: \"error\", code: 500 });\n      }\n    };\n    if (id) {\n      const favoriteId = favorites.find((gameId) => gameId === id);\n      favoriteId ? setIsFavorite(true) : setIsFavorite(false);\n      getAndSetBets(bettingContract, id);\n    }\n  }, [id, isModalToogled]);\n\n  const handleAddFavorite = (id) => {\n    if (!isFavorite) {\n      setIsFavorite(true);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify([...favorites, id]));\n      setFavorites([...favorites, id]);\n    } else {\n      setIsFavorite(false);\n      const newFavorites = favorites.filter((id) => id !== id);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify(newFavorites));\n      setFavorites(newFavorites);\n    }\n  };\n\n  const [expanded, setExpanded] = React.useState(false);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  if (state.status === \"loading\") return <LoadingAnimation />;\n  else {\n    return (\n      <>\n        <Card className={classes.root}>\n          {state.status === \"loaded\" ? (\n            <>\n              <GameCardHeader\n                game={{\n                  cover,\n                  description,\n                  ended,\n                  started,\n                  team1Name,\n                  team1Score,\n                  team2Name,\n                  team2Score,\n                  winner,\n                  start,\n                  id,\n                }}\n                competition={competition}\n              />\n              <CardMedia\n                image={server_root_path + cover}\n                className={classes.media}\n                title={`${capitalize(team1Name)} vs ${capitalize(team2Name)}`}\n              />\n              <GameCardContent\n                game={{\n                  cover,\n                  description,\n                  ended,\n                  started,\n                  team1Name,\n                  team1Score,\n                  team2Name,\n                  team2Score,\n                  winner,\n                  start,\n                  id,\n                }}\n              />\n              <CardActionBar\n                handleAddFavorite={handleAddFavorite}\n                isFavorite={isFavorite}\n                handleExpandClick={handleExpandClick}\n                expanded={expanded}\n                gameId={id}\n              />\n              <GameCardCollapse\n                expanded={expanded}\n                setModalToogled={setModalToogled}\n                game={{\n                  cover,\n                  description,\n                  ended,\n                  started,\n                  team1Name,\n                  team1Score,\n                  team2Name,\n                  team2Score,\n                  winner,\n                  start,\n                  id,\n                }}\n                betStats={bets?.betStats}\n              />\n            </>\n          ) : (\n            state.status === \"error\" && <ErrorComponent />\n          )}\n        </Card>\n        {isModalToogled &&\n          ReactDOM.createPortal(\n            <Modal\n              component={BetForm}\n              title={`Place a bet on :`}\n              buttonLabel=\"confirm\"\n              setModalToogled={setModalToogled}\n              game={{\n                cover,\n                description,\n                ended,\n                started,\n                team1Name,\n                team1Score,\n                team2Name,\n                team2Score,\n                winner,\n                start,\n                id,\n              }}\n              bettingContract={bettingContract}\n              accounts={accounts}\n            />,\n            document.querySelector(\"body\")\n          )}\n      </>\n    );\n  }\n};\n\nexport default GameCard;\n","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/MainMetrics/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/LoadingAnimation/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/GameCardContent/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/helper.js",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/GameCardHeader/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/GameCardCollapse/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/Modal/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/BetForm/index.jsx",["169","170","171"],"import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { server_root_path } from \"../../config/index.json\";\nimport { useComponentState } from \"../../hooks\";\nimport SnackBar from \"../SnackBar.index\";\nimport ModalClosePanel from \"../ModalClosePanel/index\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport clsx from \"clsx\";\nimport capitalize from \"capitalize\";\nimport {\n  Grid,\n  makeStyles,\n  TextField,\n  Typography,\n  Button,\n  Hidden,\n  MenuItem,\n  Select,\n  InputLabel,\n  FormControl,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  containerFlex: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  textfield: {\n    marginTop: \"1rem\",\n    marginBottom: \"1rem\",\n    width: \"100%\",\n  },\n  button: {\n    marginTop: \"1rem\",\n    width: \"100%\",\n  },\n  formLg: {\n    borderRadius: \"4px\",\n  },\n  form: {\n    padding: 24,\n    minHeight: \"100%\",\n  },\n  formContainer: {\n    width: \"100%\",\n    backgroundColor: \"#FFF\",\n  },\n  formContainerSm: {\n    minHeight: \"100%\",\n    top: \"4rem\",\n    position: \"relative\",\n  },\n  title: {\n    marginBottom: \"1rem\",\n  },\n  backPanel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  backArrow: {\n    marginBottom: 24,\n    marginRight: 8,\n    cursor: \"pointer\",\n  },\n  media: {\n    width: \"100%\",\n  },\n  formControl: {\n    width: \"100%\",\n  },\n  formLabel: {\n    paddingTop: \"1rem\",\n  },\n}));\n\nconst BetForm = ({\n  title,\n  buttonLabel,\n  setModalToogled,\n  bettingContract,\n  accounts,\n  game: {\n    cover,\n    description,\n    ended,\n    started,\n    team1Name,\n    team1Score,\n    team2Name,\n    team2Score,\n    winner,\n    id,\n  },\n}) => {\n  const { alert, setAlert } = useComponentState();\n  const matches = useMediaQuery(\"(max-width:600px)\");\n  const classes = useStyles();\n  const [formData, setFormData] = useState({\n    betSide: {\n      value: \"\",\n      helperText: \"\",\n      error: false,\n    },\n    betValue: {\n      value: \"\",\n      error: false,\n    },\n    isValid: false,\n  });\n  const validateFields = (event) => {\n    fields.map((field) => {\n      if (event.target.name === field.name) {\n        const newFormData = {\n          ...formData,\n          [field.name]: {\n            value: event.target.value,\n            error: event.target.value === \"\",\n            helperText: \"Required\",\n          },\n        };\n        let formIsValid = true;\n        for (const key in newFormData) {\n          if (newFormData[key].value === \"\") {\n            formIsValid = false;\n          }\n        }\n        setFormData({ ...newFormData, isValid: formIsValid });\n      }\n    });\n  };\n\n  useEffect(() => {\n    setAlert({\n      toogled: true,\n      message: \"Please fill out the form to place your bet\",\n      type: \"info\",\n    });\n  }, []);\n\n  const fields = [\n    {\n      label: \"choose your side\",\n      type: \"select\",\n      labelId: \"Choose your side\",\n      id: \"betSide\",\n      name: \"betSide\",\n      value: \"\",\n      items: [\n        { id: 1, name: team1Name?.toUpperCase(), disabled: false },\n        { id: 0, name: \"NULL\", disabled: false },\n        { id: 2, name: team2Name?.toUpperCase(), disabled: false },\n      ],\n      onChange: (event) => {\n        validateFields(event);\n      },\n      required: true,\n    },\n    {\n      type: \"number\",\n      error: \"\",\n      required: true,\n      readOnly: false,\n      helperText: \"\",\n      label: \"Bet amount\",\n      id: \"betValue\",\n      name: \"betValue\",\n      onInput: (event) => {\n        validateFields(event);\n      },\n    },\n  ];\n\n  const handleSubmit = async () => {\n    if (formData.isValid) {\n      try {\n        await bettingContract.methods\n          .bet(id, formData.betSide.value)\n          .send({\n            from: accounts[0],\n            value: bettingContract.utils.toWei(\n              formData.betValue.value.toString()\n            ),\n          });\n        setAlert({\n          toogled: true,\n          message:\n            \"Your bet has been sent to the contract ! Have Game and may the odds be ever in your favor\",\n          type: \"success\",\n        });\n      } catch (error) {\n        console.log(error)\n        setAlert({\n          toogled: true,\n          message: \"We encoutered an unexpected error, please try again\",\n          type: \"error\",\n        });\n      }\n    } else {\n      setAlert({\n        toogled: true,\n        message: \"form is invalid, please fill the required inputs\",\n        type: \"error\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Grid container className={classes.root}>\n        <Hidden mdDown>\n          <Grid item lg={4}></Grid>\n        </Hidden>\n        <Grid item xs={12} lg={4} className={classes.containerFlex}>\n          <div\n            className={\n              matches\n                ? clsx(classes.formContainer, classes.formContainerSm)\n                : classes.formContainer\n            }\n          >\n            <img\n              src={server_root_path + cover}\n              alt=\"\"\n              className={classes.media}\n            />\n            <form\n              noValidate\n              autoComplete=\"off\"\n              className={\n                matches ? classes.form : clsx(classes.form, classes.formLg)\n              }\n            >\n              <ModalClosePanel setModalToogled={setModalToogled} />\n              <Typography variant=\"h4\" component=\"h1\" className={classes.title}>\n                {title} {capitalize(team1Name)} vs {capitalize(team2Name)}\n              </Typography>\n              {fields.map((field) =>\n                field.type === \"number\" ? (\n                  <FormControl\n                    variant=\"outlined\"\n                    className={classes.formControl}\n                    key={field.id}\n                  >\n                    <TextField\n                      id={field.id}\n                      variant=\"outlined\"\n                      className={classes.textfield}\n                      required={field.required}\n                      readOnly={field.readOnly}\n                      error={formData[field.id].error}\n                      helperText={formData[field.id].helperText}\n                      type={field.type}\n                      value={formData[field.id].value}\n                      onInput={field.onInput}\n                      name={field.name}\n                      label={field.label}\n                    />\n                  </FormControl>\n                ) : (\n                  field.type === \"select\" && (\n                    <FormControl\n                      variant=\"outlined\"\n                      className={classes.formControl}\n                      key={field.id}\n                    >\n                      <InputLabel htmlFor={field.labelId}>\n                        {capitalize(field.label)}\n                      </InputLabel>\n                      <Select\n                        labelId={field.labelId}\n                        id={field.id}\n                        name={field.name}\n                        value={formData[field.id].value}\n                        onChange={field.onChange}\n                        className={classes.textfield}\n                        error={formData[field.id].error}\n                      >\n                        {field.items?.map((item) => (\n                          <MenuItem\n                            key={`game-${item.id}`}\n                            key={item.id}\n                            value={item.id}\n                            disabled={item.disabled}\n                          >\n                            {item.name}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  )\n                )\n              )}\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className={classes.button}\n                size=\"large\"\n                onClick={handleSubmit}\n                disabled={!formData.isValid}\n              >\n                {buttonLabel}\n              </Button>\n            </form>\n          </div>\n        </Grid>\n\n        <Hidden mdDown>\n          <Grid item lg={4}></Grid>\n        </Hidden>\n      </Grid>\n\n      {alert.toogled &&\n        ReactDOM.createPortal(\n          <SnackBar\n            message={alert.message}\n            type={alert.type}\n            setAlert={setAlert}\n          />,\n          document.querySelector(\"body\")\n        )}\n    </>\n  );\n};\n\nexport default BetForm;\n","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/CardActionBar/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/FiltersArea/ActiveFilters/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/SimpleSelect/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/SnackBar.index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/ModalClosePanel/index.jsx",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Home/index.jsx",["172","173","174"],"import React, { useState, useEffect } from \"react\";\nimport config from \"../../config/index.json\";\nimport { useComponentState, useProvider } from \"../../hooks\";\nimport { BettingContract } from \"../../services/Contract\";\nimport { Container, makeStyles, Grid } from \"@material-ui/core\";\nimport GameCard from \"../../components/GameCard\";\nimport FiltersArea from \"../../components/FiltersArea\";\nimport MainMetrics from \"../../components/MainMetrics\";\nimport {\n  getCompetitions,\n  getGames,\n  makeStats,\n  getBets,\n  subscibeToEvents,\n} from \"./helpers\";\n\nconst useStyles = makeStyles(() => ({\n  gradient: {\n    backgroundImage: \"linear-gradient(315deg, #ffffff 0%, #d7e1ec 74%)\",\n    top: \"4rem\",\n    position: \"relative\",\n    minHeight: \"100vh\",\n  },\n  gameContainer: {\n    paddingTop: 16,\n  },\n}));\n\nconst Home = () => {\n  const classes = useStyles();\n  const { state, setState, ErrorPage, LoadingAnimation } = useComponentState();\n  const { provider, /*setProvider,*/ accounts /*setAccounts*/ } = useProvider();\n  const [bettingContract, setBettingContract] = useState(null);\n  const [competition, setCompetition] = useState(null);\n  const [competitions, setCompetitions] = useState(null);\n  const [games, setGames] = useState(null);\n  const [isFilterGameToActive, setFilterGameToActive] = useState(true);\n  const [mainMetrics, setMainMetrics] = useState(null);\n\n  useEffect(() => {\n    const fetchAndSetBettingContract = async (provider, accounts) => {\n      try {\n        const _bettingContract = new BettingContract(\n          provider,\n          config.betting_contract_address,\n          accounts\n        );\n        setBettingContract(_bettingContract.contract);\n        const _competitions = await getCompetitions(_bettingContract);\n        setCompetitions(_competitions);\n        setCompetition(_competitions[0]);\n      } catch (error) {\n        console.log(error)\n        setState({ status: \"error\", code: 500 });\n      }\n    };\n\n    if (provider && accounts) {\n      fetchAndSetBettingContract(provider, accounts);\n    }\n  }, [provider, accounts]);\n\n  useEffect(() => {\n    const fetchAndSetMainMetricsAndGames = async (bettingContract) => {\n      try {\n        const _games = await getGames(bettingContract, competition.id);\n        const _bets = await getBets(bettingContract, _games);\n        setMainMetrics(makeStats(_bets, bettingContract, _games, competitions));\n        setGames(_games.filter((game) => game.ended !== isFilterGameToActive));\n        //subscibeToEvents();\n      } catch (error) {\n        console.log(error)\n        setState({ status: \"error\", code: 500 });\n      }\n    };\n    if (competitions && competition) {\n      fetchAndSetMainMetricsAndGames(bettingContract);\n    }\n  }, [competitions, competition, bettingContract, isFilterGameToActive]);\n\n  if (state.status === \"loading\") return <LoadingAnimation />;\n  else if (state.status === \"loaded\")\n    return (\n      <div className={classes.gradient}>\n        <Container maxWidth=\"lg\">\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <MainMetrics\n                userCount={mainMetrics?.uniqueAddressCount}\n                totalFunds={mainMetrics?.totalFunds}\n                competitionCount={mainMetrics?.competitionCount}\n                gameCount={mainMetrics?.gamesCount}\n                avgGamePerCompetition={mainMetrics?.avgGamePerCompetition}\n                transactionCount={mainMetrics?.transactionCount}\n                avgTransactionCountPerAddress={\n                  mainMetrics?.avgTransactionCountPerAddress\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FiltersArea\n                competition={competition}\n                competitions={competitions}\n                setCompetition={(selectedCompetition) =>\n                  setCompetition(selectedCompetition)\n                }\n                isFilterGameToActive={isFilterGameToActive}\n                setFilterGameToActive={(value) => setFilterGameToActive(value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Grid container spacing={2} className={classes.gameContainer}>\n                {games?.length > 0 ? (\n                  games.map((game) => (\n                    <Grid item xs={12} lg={4} key={game.id}>\n                      <GameCard\n                        competition={competition}\n                        provider={provider}\n                        accounts={accounts}\n                        game={game}\n                        bettingContract={bettingContract}\n                      />\n                    </Grid>\n                  ))\n                ) : (\n                  <ErrorPage code={404} height=\"100%\" messageDisplayed={false} />\n                )}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    );\n  else {\n    return <ErrorPage code={state.code} height=\"90vh\" />;\n  }\n};\n\nexport default Home;","/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Home/helpers.js",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Admin/index.jsx",["175","176","177","178"],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Admin/helpers.js",[],"/home/sama/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCardAdmin/index.jsx",["179","180","181"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { server_root_path } from \"../../config/index.json\";\nimport { useComponentState } from \"../../hooks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport { CardMedia } from \"@material-ui/core\";\nimport capitalize from \"capitalize\";\nimport CardActionBar from \"../CardActionBar\";\nimport GameCardCollapse from \"../GameCard/GameCardCollapse/index\";\nimport GameCardHeader from \"../GameCard/GameCardHeader/index\";\nimport GameCardContent from \"../GameCard/GameCardContent/index\";\nimport Context from '../../context/index';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        textAlign: \"left\",\n        padding: 16,\n        justifyContent: \"space-between\",\n        \"& h5\": {\n            fontWeight: 700,\n        },\n    },\n    media: {\n        height: 0,\n        paddingTop: \"56.25%\", // 16:9\n    },\n    expand: {\n        transform: \"rotate(0deg)\",\n        marginLeft: \"auto\",\n        transition: theme.transitions.create(\"transform\", {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: \"rotate(180deg)\",\n    },\n    gameName: {\n        marginBottom: 8,\n    },\n}));\n\nconst GameCardAdmin = ({\n    competition,\n    accounts,\n    game: {\n        cover,\n        description,\n        ended,\n        started,\n        team1Name,\n        team1Score,\n        team2Name,\n        team2Score,\n        winner,\n        start,\n        id,\n    },\n}) => {\n    const classes = useStyles();\n    const { favorites, setFavorites } = useContext(Context);\n    const [isFavorite, setIsFavorite] = useState();\n\n    const handleAddFavorite = (id) => {\n        if (!isFavorite) {\n            setIsFavorite(true);\n            localStorage.setItem(\"favoriteGames\", JSON.stringify([...favorites, id]));\n            setFavorites([...favorites, id]);\n        } else {\n            setIsFavorite(false);\n            const newFavorites = favorites.filter((id) => id !== id);\n            localStorage.setItem(\"favoriteGames\", JSON.stringify(newFavorites));\n            setFavorites(newFavorites);\n        }\n    };\n\n    // Access custom hooks to display errors and loading animations\n    const {\n        state,\n        setState,\n        ErrorComponent,\n        LoadingAnimation,\n        isModalToogled,\n        setModalToogled,\n    } = useComponentState();\n\n\n    useEffect(() => {\n        if (id) {\n            const favoriteId = favorites.find((gameId) => gameId === id);\n            favoriteId ? setIsFavorite(true) : setIsFavorite(false);\n        }\n    }, [id, isModalToogled]);\n\n\n    const [expanded, setExpanded] = React.useState(false);\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    if (state.status === \"loading\") return <LoadingAnimation />;\n    else {\n        return (\n            <Card className={classes.root}>\n                {state.status === \"loaded\" ? (\n                    <>\n                        <GameCardHeader\n                            game={{\n                                cover,\n                                description,\n                                ended,\n                                started,\n                                team1Name,\n                                team1Score,\n                                team2Name,\n                                team2Score,\n                                winner,\n                                start,\n                                id,\n                            }}\n                            competition={competition}\n                        />\n                        <CardMedia\n                            image={server_root_path + cover}\n                            className={classes.media}\n                            title={`${capitalize(team1Name)} vs ${capitalize(team2Name)}`}\n                        />\n                        <GameCardContent\n                            game={{\n                                cover,\n                                description,\n                                ended,\n                                started,\n                                team1Name,\n                                team1Score,\n                                team2Name,\n                                team2Score,\n                                winner,\n                                start,\n                                id,\n                            }}\n                        />\n                        <CardActionBar\n                            handleAddFavorite={handleAddFavorite}\n                            isFavorite={isFavorite}\n                            handleExpandClick={handleExpandClick}\n                            expanded={expanded}\n                            gameId={id}\n                        />\n                        <GameCardCollapse\n                            expanded={expanded}\n                            setModalToogled={setModalToogled}\n                            game={{\n                                cover,\n                                description,\n                                ended,\n                                started,\n                                team1Name,\n                                team1Score,\n                                team2Name,\n                                team2Score,\n                                winner,\n                                start,\n                                id,\n                            }}\n                        />\n                    </>\n                ) : (\n                    state.status === \"error\" && <ErrorComponent />\n                )}\n            </Card>\n        );\n    }\n};\n\nexport default GameCardAdmin;\n",{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":3,"column":18,"nodeType":"188","messageId":"189","endLine":3,"endColumn":20},{"ruleId":"190","severity":1,"message":"191","line":94,"column":6,"nodeType":"192","endLine":94,"endColumn":26,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":103,"column":53,"nodeType":"196","messageId":"197","endLine":103,"endColumn":62},{"ruleId":"186","severity":1,"message":"187","line":114,"column":24,"nodeType":"188","messageId":"189","endLine":114,"endColumn":26},{"ruleId":"190","severity":1,"message":"198","line":141,"column":6,"nodeType":"192","endLine":141,"endColumn":8,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":284,"column":29,"nodeType":"202","messageId":"203","endLine":284,"endColumn":42},{"ruleId":"204","severity":1,"message":"205","line":14,"column":3,"nodeType":"206","messageId":"207","endLine":14,"endColumn":19},{"ruleId":"190","severity":1,"message":"208","line":61,"column":6,"nodeType":"192","endLine":61,"endColumn":26,"suggestions":"209"},{"ruleId":"190","severity":1,"message":"208","line":79,"column":6,"nodeType":"192","endLine":79,"endColumn":72,"suggestions":"210"},{"ruleId":"204","severity":1,"message":"211","line":6,"column":8,"nodeType":"206","messageId":"207","endLine":6,"endColumn":21},{"ruleId":"204","severity":1,"message":"212","line":27,"column":12,"nodeType":"206","messageId":"207","endLine":27,"endColumn":17},{"ruleId":"190","severity":1,"message":"208","line":46,"column":8,"nodeType":"192","endLine":46,"endColumn":28,"suggestions":"213"},{"ruleId":"190","severity":1,"message":"208","line":77,"column":8,"nodeType":"192","endLine":77,"endColumn":16,"suggestions":"214"},{"ruleId":"194","severity":1,"message":"195","line":70,"column":59,"nodeType":"196","messageId":"197","endLine":70,"endColumn":68},{"ruleId":"204","severity":1,"message":"215","line":79,"column":9,"nodeType":"206","messageId":"207","endLine":79,"endColumn":17},{"ruleId":"190","severity":1,"message":"216","line":92,"column":8,"nodeType":"192","endLine":92,"endColumn":28,"suggestions":"217"},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'bettingContract', 'favorites', and 'setState'. Either include them or remove the dependency array.","ArrayExpression",["220"],"no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","React Hook useEffect has a missing dependency: 'setAlert'. Either include it or remove the dependency array.",["221"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-unused-vars","'subscibeToEvents' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'setState'. Either include it or remove the dependency array.",["222"],["223"],"'GameCardAdmin' is defined but never used.","'games' is assigned a value but never used.",["224"],["225"],"'setState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'favorites'. Either include it or remove the dependency array.",["226"],"no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"231","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},"Update the dependencies array to be: [bettingContract, favorites, id, isModalToogled, setState]",{"range":"240","text":"241"},"Update the dependencies array to be: [setAlert]",{"range":"242","text":"243"},"Update the dependencies array to be: [provider, accounts, setState]",{"range":"244","text":"245"},"Update the dependencies array to be: [competitions, competition, bettingContract, isFilterGameToActive, setState]",{"range":"246","text":"247"},{"range":"248","text":"245"},"Update the dependencies array to be: [season, setState]",{"range":"249","text":"250"},"Update the dependencies array to be: [favorites, id, isModalToogled]",{"range":"251","text":"252"},[2456,2476],"[bettingContract, favorites, id, isModalToogled, setState]",[2826,2828],"[setAlert]",[2034,2054],"[provider, accounts, setState]",[2708,2774],"[competitions, competition, bettingContract, isFilterGameToActive, setState]",[1657,1677],[2755,2763],"[season, setState]",[2612,2632],"[favorites, id, isModalToogled]"]
{"ast":null,"code":"var _jsxFileName = \"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/BetForm/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ModalClosePanel from \"../ModalClosePanel/index\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport clsx from \"clsx\";\nimport { Grid, makeStyles, TextField, Typography, Button, Hidden } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {},\n  containerFlex: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  textfield: {\n    marginTop: \"1rem\",\n    marginBottom: \"1rem\",\n    width: \"100%\"\n  },\n  button: {\n    marginTop: \"1rem\",\n    width: \"100%\"\n  },\n  formLg: {\n    borderRadius: \"4px\"\n  },\n  form: {\n    backgroundColor: \"#FFF\",\n    padding: 24,\n    minHeight: \"100%\"\n  },\n  formContainer: {\n    width: \"100%\"\n  },\n  formContainerSm: {\n    minHeight: \"100%\",\n    top: \"4rem\",\n    position: \"relative\"\n  },\n  title: {\n    marginBottom: \"1rem\"\n  },\n  backPanel: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  backArrow: {\n    marginBottom: 24,\n    marginRight: 8,\n    cursor: \"pointer\"\n  }\n}));\n\nconst BetForm = ({\n  title,\n  buttonLabel,\n  setModalToogled\n}) => {\n  _s();\n\n  const matches = useMediaQuery(\"(max-width:600px)\");\n  const classes = useStyles();\n  const formRef = useRef();\n  const [isFormValid, setFormValid] = useState(false);\n  const fields = [{\n    type: \"select\",\n    labelId: \"\",\n    id: \"\",\n    value: \"\",\n    onChange: () => {},\n    fields: [{\n      id: \"\",\n      name: \"\"\n    }, {}]\n  }, {\n    type: \"number\",\n    error: \"\",\n    required: true,\n    readOnly: false,\n    helperText: \"\",\n    label: \"\",\n    id: \"\"\n  }, {\n    type: \"number\",\n    error: \"\",\n    required: true,\n    readOnly: false,\n    helperText: \"\",\n    label: \"\",\n    id: \"\"\n  }, {\n    type: \"number\",\n    error: \"\",\n    required: true,\n    readOnly: false,\n    helperText: \"\",\n    label: \"\",\n    id: \"\"\n  }];\n\n  const handleSubmit = () => {\n    const formData = new FormData(formRef.current);\n\n    for (let pair of formData.entries) {\n      const key = pair[0];\n      const value = pair[1];\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Hidden, {\n      mdDown: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      lg: 4,\n      className: classes.containerFlex,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: matches ? clsx(classes.formContainer, classes.formContainerSm) : classes.formContainer,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          autoComplete: \"off\",\n          className: matches ? classes.form : clsx(classes.form, classes.formLg),\n          ref: formRef,\n          children: [/*#__PURE__*/_jsxDEV(ModalClosePanel, {\n            setModalToogled: setModalToogled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            className: classes.title,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), fields === null || fields === void 0 ? void 0 : fields.filter(field.type === \"number\" || \"text\").map(field => /*#__PURE__*/_jsxDEV(TextField, {\n            id: field.id,\n            label: field.label.toUpperCase(),\n            variant: \"outlined\",\n            className: classes.textfield,\n            required: field.required,\n            readOnly: field.readOnly,\n            error: field.error,\n            helperText: field.helperText,\n            type: field.type\n          }, field.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)), fields === null || fields === void 0 ? void 0 : fields.filter(field.type === \"select\").map(field => {\n            var _fields$items;\n\n            return /*#__PURE__*/_jsxDEV(Select, {\n              labelId: field.labelId,\n              id: field.id,\n              value: field.value,\n              onChange: field.onChange,\n              children: (_fields$items = fields.items) === null || _fields$items === void 0 ? void 0 : _fields$items.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                id: item.id,\n                value: item.name,\n                children: item.name\n              }, `competitions-${item.id}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            className: classes.button,\n            size: \"large\",\n            onClick: handleSubmit,\n            disabled: !isFormValid,\n            children: buttonLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n      mdDown: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BetForm, \"U21LhkXbfU27QNhM9nzHwN8hEFM=\", false, function () {\n  return [useMediaQuery, useStyles];\n});\n\n_c = BetForm;\nexport default BetForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BetForm\");","map":{"version":3,"sources":["/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/BetForm/index.jsx"],"names":["React","useState","useEffect","useRef","ModalClosePanel","useMediaQuery","clsx","Grid","makeStyles","TextField","Typography","Button","Hidden","useStyles","root","containerFlex","display","flexDirection","justifyContent","alignItems","textfield","marginTop","marginBottom","width","button","formLg","borderRadius","form","backgroundColor","padding","minHeight","formContainer","formContainerSm","top","position","title","backPanel","backArrow","marginRight","cursor","BetForm","buttonLabel","setModalToogled","matches","classes","formRef","isFormValid","setFormValid","fields","type","labelId","id","value","onChange","name","error","required","readOnly","helperText","label","handleSubmit","formData","FormData","current","pair","entries","key","filter","field","map","toUpperCase","items","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport ModalClosePanel from \"../ModalClosePanel/index\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport clsx from \"clsx\";\nimport {\n  Grid,\n  makeStyles,\n  TextField,\n  Typography,\n  Button,\n  Hidden,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  containerFlex: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  textfield: {\n    marginTop: \"1rem\",\n    marginBottom: \"1rem\",\n    width: \"100%\",\n  },\n  button: {\n    marginTop: \"1rem\",\n    width: \"100%\",\n  },\n  formLg: {\n    borderRadius: \"4px\",\n  },\n  form: {\n    backgroundColor: \"#FFF\",\n    padding: 24,\n    minHeight: \"100%\",\n  },\n  formContainer: {\n    width: \"100%\",\n  },\n  formContainerSm: {\n    minHeight: \"100%\",\n    top: \"4rem\",\n    position: \"relative\",\n  },\n  title: {\n    marginBottom: \"1rem\",\n  },\n  backPanel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  backArrow: {\n    marginBottom: 24,\n    marginRight: 8,\n    cursor: \"pointer\",\n  },\n}));\n\nconst BetForm = ({ title, buttonLabel, setModalToogled }) => {\n  const matches = useMediaQuery(\"(max-width:600px)\");\n  const classes = useStyles();\n  const formRef = useRef();\n  const [isFormValid, setFormValid] = useState(false);\n  const fields = [\n    {\n      type: \"select\",\n      labelId: \"\", \n      id:\"\",\n      value:\"\",\n      onChange: ()=>{},\n      fields: [\n        {id:\"\", name:\"\"},{}\n      ]\n    },\n    {\n      type: \"number\",\n      error: \"\",\n      required: true,\n      readOnly: false,\n      helperText: \"\",\n      label: \"\",\n      id: \"\",\n    },\n    {\n      type: \"number\",\n      error: \"\",\n      required: true,\n      readOnly: false,\n      helperText: \"\",\n      label: \"\",\n      id: \"\",\n    },\n    {\n      type: \"number\",\n      error: \"\",\n      required: true,\n      readOnly: false,\n      helperText: \"\",\n      label: \"\",\n      id: \"\",\n    },\n  ];\n\n  const handleSubmit = () => {\n    const formData = new FormData(formRef.current);\n    for (let pair of formData.entries) {\n      const key = pair[0];\n      const value = pair[1];\n    }\n  };\n\n  return (\n    <Grid container className={classes.root}>\n      <Hidden mdDown>\n        <Grid item lg={4}></Grid>\n      </Hidden>\n      <Grid item xs={12} lg={4} className={classes.containerFlex}>\n        <div\n          className={\n            matches\n              ? clsx(classes.formContainer, classes.formContainerSm)\n              : classes.formContainer\n          }\n        >\n          <form\n            noValidate\n            autoComplete=\"off\"\n            className={\n              matches ? classes.form : clsx(classes.form, classes.formLg)\n            }\n            ref={formRef}\n          >\n            <ModalClosePanel setModalToogled={setModalToogled} />\n            <Typography variant=\"h4\" component=\"h1\" className={classes.title}>\n              {title}\n            </Typography>\n            {fields?.filter(field.type === \"number\" || \"text\").map((field) => (\n              <TextField\n                key={field.id}\n                id={field.id}\n                label={field.label.toUpperCase()}\n                variant=\"outlined\"\n                className={classes.textfield}\n                required={field.required}\n                readOnly={field.readOnly}\n                error={field.error}\n                helperText={field.helperText}\n                type={field.type}\n              />\n            ))}\n\n            {fields?.filter(field.type === \"select\").map((field) => (\n              <Select\n                labelId={field.labelId}\n                id={field.id}\n                value={field.value}\n                onChange={field.onChange}\n              >\n                {fields.items?.map((item) => (\n                  <MenuItem\n                    key={`competitions-${item.id}`}\n                    id={item.id}\n                    value={item.name}\n                  >\n                    {item.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            ))}\n\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              className={classes.button}\n              size=\"large\"\n              onClick={handleSubmit}\n              disabled={!isFormValid}\n            >\n              {buttonLabel}\n            </Button>\n          </form>\n        </div>\n      </Grid>\n\n      <Hidden mdDown>\n        <Grid item lg={4}></Grid>\n      </Hidden>\n    </Grid>\n  );\n};\n\nexport default BetForm;\n"]},"metadata":{},"sourceType":"module"}
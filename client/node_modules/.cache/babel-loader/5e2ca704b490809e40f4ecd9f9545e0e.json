{"ast":null,"code":"var _jsxFileName = \"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Dashboard/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport config from \"../../config/index\";\nimport { useComponentState, useProvider } from \"../../hooks\";\nimport { BettingContract } from \"../../services/Contract\";\nimport { Container, makeStyles } from \"@material-ui/core\";\nimport GameCard from \"../../components/GameCard\";\nimport FiltersArea from \"../../components/FiltersArea\";\nimport MainMetrics from \"../../components/MainMetrics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  gradient: {\n    backgroundImage: \"linear-gradient(315deg, #ffffff 0%, #d7e1ec 74%)\",\n    top: \"4rem\",\n    position: \"relative\",\n    minHeight: \"100vh\"\n  }\n}));\n\nconst Dashboard = () => {\n  _s();\n\n  var _competition, _competition$gameAdre;\n\n  const classes = useStyles(); // component state\n\n  const {\n    state,\n    setState,\n    Error,\n    LoadingAnimation\n  } = useComponentState(); // 1 - provider accounts\n\n  const {\n    provider,\n    setProvider,\n    accounts,\n    setAccounts\n  } = useProvider(); // 2- BettingContract\n\n  const [bettingContract, setBettingContract] = useState(null);\n  useEffect(() => {\n    const fetchAndSetBettingContract = async (provider, accounts) => {\n      try {\n        const BettingContractInterface = new BettingContract(provider, config.initial_contract_address, accounts);\n        setBettingContract(BettingContractInterface.contract);\n      } catch (error) {\n        setState({\n          status: \"error\",\n          code: 500\n        });\n      }\n    };\n\n    if (provider && accounts) {\n      fetchAndSetBettingContract(provider, accounts);\n    }\n  }, [provider, accounts]);\n  useEffect(() => {}, []);\n  if (state.status === \"loading\") return /*#__PURE__*/_jsxDEV(LoadingAnimation, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 42\n  }, this);else if (state.status === \"loaded\") return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.gradient,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(MainMetrics, {\n        userCount: 10,\n        totalFunds: 5,\n        competitionCount: 9,\n        gameCount: 18,\n        avgGamePerCompetition: 9,\n        transactionCount: 200,\n        avgTransactionCountPerAddress: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FiltersArea, {\n        competition: competition,\n        competitions: competitions,\n        setCompetition: selectedCompetition => setCompetition(selectedCompetition)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), (_competition = competition) === null || _competition === void 0 ? void 0 : (_competition$gameAdre = _competition.gameAdresses) === null || _competition$gameAdre === void 0 ? void 0 : _competition$gameAdre.map(gameAddress => /*#__PURE__*/_jsxDEV(GameCard, {\n        competition: competition,\n        provider: provider,\n        gameAddress: gameAddress,\n        accounts: accounts\n      }, gameAddress, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);else {\n    return /*#__PURE__*/_jsxDEV(Error, {\n      code: state.code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(Dashboard, \"S1UFzUIgjHk/fr6zfga54jg/EP4=\", false, function () {\n  return [useStyles, useComponentState, useProvider];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Dashboard/index.jsx"],"names":["React","useState","useEffect","config","useComponentState","useProvider","BettingContract","Container","makeStyles","GameCard","FiltersArea","MainMetrics","useStyles","gradient","backgroundImage","top","position","minHeight","Dashboard","classes","state","setState","Error","LoadingAnimation","provider","setProvider","accounts","setAccounts","bettingContract","setBettingContract","fetchAndSetBettingContract","BettingContractInterface","initial_contract_address","contract","error","status","code","competition","competitions","selectedCompetition","setCompetition","gameAdresses","map","gameAddress"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport config from \"../../config/index\";\nimport { useComponentState, useProvider } from \"../../hooks\";\nimport { BettingContract } from \"../../services/Contract\";\nimport { Container, makeStyles } from \"@material-ui/core\";\nimport GameCard from \"../../components/GameCard\";\nimport FiltersArea from \"../../components/FiltersArea\";\nimport MainMetrics from \"../../components/MainMetrics\";\n\nconst useStyles = makeStyles(() => ({\n  gradient: {\n    backgroundImage: \"linear-gradient(315deg, #ffffff 0%, #d7e1ec 74%)\",\n    top: \"4rem\",\n    position: \"relative\",\n    minHeight: \"100vh\",\n  },\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  // component state\n  const { state, setState, Error, LoadingAnimation } =\n    useComponentState();\n  // 1 - provider accounts\n  const { provider, setProvider, accounts, setAccounts } = useProvider();\n  // 2- BettingContract\n  const [bettingContract, setBettingContract] =\n    useState(null);\n  useEffect(() => {\n    const fetchAndSetBettingContract = async (\n      provider,\n      accounts\n    ) => {\n      try {\n        const BettingContractInterface =\n          new BettingContract(\n            provider,\n            config.initial_contract_address,\n            accounts\n          );\n        setBettingContract(\n          BettingContractInterface.contract\n        );\n        \n      } catch (error) {\n        setState({ status: \"error\", code: 500 });\n      }\n    };\n\n    if (provider && accounts) {\n      fetchAndSetBettingContract(provider, accounts);\n    }\n  }, [provider, accounts]);\n\n\n  useEffect(() => {}, [\n\n  ]);\n\n  if (state.status === \"loading\") return <LoadingAnimation />;\n  else if (state.status === \"loaded\")\n    return (\n      <div className={classes.gradient}>\n        <Container maxWidth=\"lg\">\n          <MainMetrics\n            userCount={10}\n            totalFunds={5}\n            competitionCount={9}\n            gameCount={18}\n            avgGamePerCompetition={9}\n            transactionCount={200}\n            avgTransactionCountPerAddress={3}\n          />\n          <FiltersArea\n            competition={competition}\n            competitions={competitions}\n            setCompetition={(selectedCompetition) =>\n              setCompetition(selectedCompetition)\n            }\n          />\n          {competition?.gameAdresses?.map((gameAddress) => (\n            <GameCard\n              key={gameAddress}\n              competition={competition}\n              provider={provider}\n              gameAddress={gameAddress}\n              accounts={accounts}\n            />\n          ))}\n        </Container>\n      </div>\n    );\n  else {\n    return <Error code={state.code} />;\n  }\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/neurotropik/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/hoc/ComponentState/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport LoadingAnimation from \"../../components/LoadingAnimation/index\";\nimport Error from \"../../components/Error/index\";\nimport Navbar from \"../../components/NavBar/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ComponentState = ({\n  component: Component,\n  ...props\n}) => {\n  _s();\n\n  const [provider, setProvider] = useState();\n  const [state, setState] = useState({\n    status: \"loading\",\n    code: null\n  });\n  useEffect(() => {\n    const getAndSetProvider = async () => {\n      if (process.env.NODE_ENV == \"developement\") {\n        setProvider(new Web3(\"http://localhost:8545\"));\n      } else {\n        const provider = await detectEthereumProvider();\n\n        if (provider) {\n          setProvider(provider);\n        } else {\n          setState({\n            status: \"error\",\n            code: 499\n          });\n        }\n      }\n    };\n\n    getAndSetProvider();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      menuRightDisplayed: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), state.status === \"loading\" && /*#__PURE__*/_jsxDEV(LoadingAnimation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 38\n    }, this), state.status == \"error\" && /*#__PURE__*/_jsxDEV(Error, {\n      code: state.code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 35\n    }, this), state.status !== \"loading\" && state.status !== \"error\" && /*#__PURE__*/_jsxDEV(Component, {\n      setState: setState,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ComponentState, \"C1hO5zWOt786IOP60PcUqQoSGas=\");\n\n_c = ComponentState;\nexport default ComponentState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComponentState\");","map":{"version":3,"sources":["/home/neurotropik/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/hoc/ComponentState/index.jsx"],"names":["React","useEffect","useState","Web3","detectEthereumProvider","LoadingAnimation","Error","Navbar","ComponentState","component","Component","props","provider","setProvider","state","setState","status","code","getAndSetProvider","process","env","NODE_ENV"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;;;AAIA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAwC;AAAA;;AAC7D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC;AACjCc,IAAAA,MAAM,EAAE,SADyB;AAEjCC,IAAAA,IAAI,EAAE;AAF2B,GAAD,CAAlC;AAKAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,iBAAiB,GAAG,YAAY;AACpC,UAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,cAA5B,EAA4C;AAC1CR,QAAAA,WAAW,CAAC,IAAIV,IAAJ,CAAS,uBAAT,CAAD,CAAX;AACD,OAFD,MAEO;AACL,cAAMS,QAAQ,GAAG,MAAMR,sBAAsB,EAA7C;;AACA,YAAIQ,QAAJ,EAAc;AACZC,UAAAA,WAAW,CAACD,QAAD,CAAX;AACD,SAFD,MAEO;AACLG,UAAAA,QAAQ,CAAC;AAAEC,YAAAA,MAAM,EAAE,OAAV;AAAmBC,YAAAA,IAAI,EAAE;AAAzB,WAAD,CAAR;AACD;AACF;AACF,KAXD;;AAaAC,IAAAA,iBAAiB;AAClB,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,kBAAkB,EAAE;AAA5B;AAAA;AAAA;AAAA;AAAA,YADF,EAGGJ,KAAK,CAACE,MAAN,KAAiB,SAAjB,iBAA8B,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAHjC,EAIGF,KAAK,CAACE,MAAN,IAAgB,OAAhB,iBAA2B,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEF,KAAK,CAACG;AAAnB;AAAA;AAAA;AAAA;AAAA,YAJ9B,EAKGH,KAAK,CAACE,MAAN,KAAiB,SAAjB,IAA8BF,KAAK,CAACE,MAAN,KAAiB,OAA/C,iBACC,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAED,QAArB;AAAA,SAAmCJ;AAAnC;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,kBADF;AAWD,CAnCD;;GAAMH,c;;KAAAA,c;AAqCN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport LoadingAnimation from \"../../components/LoadingAnimation/index\";\nimport Error from \"../../components/Error/index\";\nimport Navbar from \"../../components/NavBar/index\";\n\n\n\nconst ComponentState = ({ component: Component, ...props }) => {\n  const [provider, setProvider] = useState();\n  const [state, setState] = useState({\n    status: \"loading\",\n    code: null,\n  });\n\n  useEffect(() => {\n    const getAndSetProvider = async () => {\n      if (process.env.NODE_ENV == \"developement\") {\n        setProvider(new Web3(\"http://localhost:8545\"));\n      } else {\n        const provider = await detectEthereumProvider();\n        if (provider) {\n          setProvider(provider);\n        } else {\n          setState({ status: \"error\", code: 499 });\n        }\n      }\n    };\n\n    getAndSetProvider();\n  }, []);\n\n  return (\n    <>\n      <Navbar menuRightDisplayed={false} />\n\n      {state.status === \"loading\" && <LoadingAnimation />}\n      {state.status == \"error\" && <Error code={state.code} />}\n      {state.status !== \"loading\" && state.status !== \"error\" && (\n        <Component setState={setState} {...props} />\n      )}\n    </>\n  );\n};\n\nexport default ComponentState;\n"]},"metadata":{},"sourceType":"module"}
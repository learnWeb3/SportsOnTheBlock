{"ast":null,"code":"var _jsxFileName = \"/home/neurotropik/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/hoc/ComponentState/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport LoadingAnimation from \"../../components/LoadingAnimation/index\"; // import Error from \"../../components/Error/index\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ComponentState = ({\n  component: Component,\n  props\n}) => {\n  _s();\n\n  const [provider, setProvider] = useState();\n  const [state, setState] = useState({\n    status: \"loaded\",\n    code: null\n  }); //   useEffect(() => {\n  //     const getAndSetProvider = async () => {\n  //       if (process.env == \"developement\") {\n  //         setProvider(new Web3(\"http://localhost:8545\"));\n  //       } else {\n  //         const provider = await detectEthereumProvider();\n  //         if (provider) {\n  //           setProvider(provider);\n  //         } else {\n  //           setState({ status: \"error\", code: 499 });\n  //         }\n  //       }\n  //     };\n  //     getAndSetProvider();\n  //   }, []);\n\n  if (state.status === \"loading\") {\n    return /*#__PURE__*/_jsxDEV(LoadingAnimation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  } else if (state.status == \"error\") {\n    return /*#__PURE__*/_jsxDEV(Error, {\n      code: state.code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Component, {\n      setState: setState,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Component, {\n    setState: setState,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ComponentState, \"FxbJXTMn9oxCxq7QjK0AsYvOpBw=\");\n\n_c = ComponentState;\nexport default ComponentState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComponentState\");","map":{"version":3,"sources":["/home/neurotropik/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/hoc/ComponentState/index.jsx"],"names":["React","useEffect","useState","Web3","detectEthereumProvider","LoadingAnimation","ComponentState","component","Component","props","provider","setProvider","state","setState","status","code"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,OAAOC,gBAAP,MAA6B,yCAA7B,C,CACA;;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA;AAAxB,CAAD,KAAqC;AAAA;;AAC1D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,EAAxC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC;AACjCY,IAAAA,MAAM,EAAE,QADyB;AAEjCC,IAAAA,IAAI,EAAE;AAF2B,GAAD,CAAlC,CAF0D,CAO5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEE,MAAIH,KAAK,CAACE,MAAN,KAAiB,SAArB,EAAgC;AAC9B,wBAAO,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAIF,KAAK,CAACE,MAAN,IAAgB,OAApB,EAA6B;AAClC,wBAAO,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEF,KAAK,CAACG;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBAAO,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEF,QAArB;AAAA,SAAmCJ;AAAnC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAO,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAEI,QAArB;AAAA,OAAmCJ;AAAnC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAjCD;;GAAMH,c;;KAAAA,c;AAmCN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport LoadingAnimation from \"../../components/LoadingAnimation/index\";\n// import Error from \"../../components/Error/index\";\n\nconst ComponentState = ({ component: Component, props }) => {\n  const [provider, setProvider] = useState();\n  const [state, setState] = useState({\n    status: \"loaded\",\n    code: null,\n  });\n\n//   useEffect(() => {\n//     const getAndSetProvider = async () => {\n//       if (process.env == \"developement\") {\n//         setProvider(new Web3(\"http://localhost:8545\"));\n//       } else {\n//         const provider = await detectEthereumProvider();\n//         if (provider) {\n//           setProvider(provider);\n//         } else {\n//           setState({ status: \"error\", code: 499 });\n//         }\n//       }\n//     };\n\n//     getAndSetProvider();\n//   }, []);\n\n  if (state.status === \"loading\") {\n    return <LoadingAnimation />;\n  } else if (state.status == \"error\") {\n    return <Error code={state.code} />;\n  } else {\n    return <Component setState={setState} {...props} />;\n  }\n\n  return <Component setState={setState} {...props} />;\n};\n\nexport default ComponentState;\n"]},"metadata":{},"sourceType":"module"}
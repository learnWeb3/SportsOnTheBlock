{"ast":null,"code":"var _jsxFileName = \"/home/neurotropik/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"./CardHeader\";\nimport CardBody from \"./CardBody\";\nimport { CardContent, Grid, Typography, Collapse } from \"@material-ui/core\";\nimport GameDescriptionPanel from \"../GameDescriptionPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 16,\n    marginBottom: 16,\n    textAlign: \"left\",\n    padding: 16\n  },\n  media: {\n    height: \"100%\",\n    width: \"100%\"\n  },\n  description: {\n    marginTop: 16\n  }\n}));\n\nconst GameCard = ({\n  game: {\n    teamA,\n    teamB,\n    draw,\n    datetime,\n    description,\n    media,\n    id,\n    competition,\n    gameStatus\n  },\n  favorites,\n  setFavorites\n}) => {\n  _s();\n\n  const [isFavorite, setIsFavorite] = useState();\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleAddFavorite = id => {\n    if (!isFavorite) {\n      setIsFavorite(true);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify([...favorites, id]));\n      setFavorites([...favorites, id]);\n    } else {\n      setIsFavorite(false);\n      const newFavorites = favorites.filter(favorite => favorite === id);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify(newFavorites));\n      setFavorites(newFavorites);\n    }\n  };\n\n  useEffect(() => {\n    const favoriteId = favorites.find(favId => favId === id);\n    favoriteId ? setIsFavorite(true) : setIsFavorite(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    id: `game-${id}`,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: media,\n          alt: \"game cover\",\n          className: classes.media\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        lg: 8,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          id: id,\n          teamA: teamA,\n          teamB: teamB,\n          datetime: datetime,\n          draw: draw,\n          competition: competition,\n          gameStatus: gameStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          isFavorite: isFavorite,\n          handleAddFavorite: handleAddFavorite,\n          teamA: teamA,\n          description: description,\n          teamB: teamB,\n          draw: draw,\n          expanded: expanded,\n          handleExpandClick: handleExpandClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: expanded,\n      timeout: \"auto\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(GameDescriptionPanel, {\n          description: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GameCard, \"3LP5pU8syVImQKT/JpFwgQV5DIM=\", false, function () {\n  return [useStyles];\n});\n\n_c = GameCard;\nexport default GameCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameCard\");","map":{"version":3,"sources":["/home/neurotropik/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/index.jsx"],"names":["React","useState","useEffect","makeStyles","Card","CardHeader","CardBody","CardContent","Grid","Typography","Collapse","GameDescriptionPanel","useStyles","theme","root","marginTop","marginBottom","textAlign","padding","media","height","width","description","GameCard","game","teamA","teamB","draw","datetime","id","competition","gameStatus","favorites","setFavorites","isFavorite","setIsFavorite","classes","expanded","setExpanded","handleExpandClick","handleAddFavorite","localStorage","setItem","JSON","stringify","newFavorites","filter","favorite","favoriteId","find","favId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"./CardHeader\";\nimport CardBody from \"./CardBody\";\nimport { CardContent, Grid, Typography, Collapse } from \"@material-ui/core\";\nimport GameDescriptionPanel from \"../GameDescriptionPanel\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 16,\n    marginBottom: 16,\n    textAlign: \"left\",\n    padding: 16,\n  },\n  media: {\n    height: \"100%\",\n    width: \"100%\",\n  },\n  description: {\n    marginTop: 16,\n  },\n}));\n\nconst GameCard = ({\n  game: { teamA, teamB, draw, datetime, description, media, id, competition, gameStatus },\n  favorites,\n  setFavorites,\n}) => {\n  const [isFavorite, setIsFavorite] = useState();\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleAddFavorite = (id) => {\n    if (!isFavorite) {\n      setIsFavorite(true);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify([...favorites, id]));\n      setFavorites([...favorites, id]);\n    } else {\n      setIsFavorite(false);\n      const newFavorites = favorites.filter((favorite) => favorite === id);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify(newFavorites));\n      setFavorites(newFavorites);\n    }\n  };\n\n  useEffect(() => {\n    const favoriteId = favorites.find((favId) => favId === id);\n    favoriteId ? setIsFavorite(true) : setIsFavorite(false);\n  }, []);\n\n  return (\n    <Card className={classes.root} id={`game-${id}`}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} lg={4}>\n          <img src={media} alt=\"game cover\" className={classes.media} />\n        </Grid>\n        <Grid item xs={12} lg={8}>\n          <CardHeader\n            id={id}\n            teamA={teamA}\n            teamB={teamB}\n            datetime={datetime}\n            draw={draw}\n            competition={competition}\n            gameStatus={gameStatus}\n          />\n          <CardBody\n            isFavorite={isFavorite}\n            handleAddFavorite={handleAddFavorite}\n            teamA={teamA}\n            description={description}\n            teamB={teamB}\n            draw={draw}\n            expanded={expanded}\n            handleExpandClick={handleExpandClick}\n          />\n        </Grid>\n      </Grid>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <GameDescriptionPanel description={description} />\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default GameCard;\n"]},"metadata":{},"sourceType":"module"}
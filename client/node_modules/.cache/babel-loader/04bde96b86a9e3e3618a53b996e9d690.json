{"ast":null,"code":"var _jsxFileName = \"/home/neurotropik/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/hoc/ComponentState/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport LoadingAnimation from '../../components/LoadingAnimation/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ComponentState = ({\n  component: Component,\n  props\n}) => {\n  _s();\n\n  const [provider, setProvider] = useState();\n  const [state, setState] = useState({\n    status: \"loading\",\n    code: null\n  });\n  useEffect(() => {\n    const getAndSetProvider = async () => {\n      if (process.env == \"developement\") {\n        setProvider(new Web3(\"http://localhost:8545\"));\n      } else {\n        const provider = await detectEthereumProvider();\n\n        if (provider) {\n          setProvider(provider);\n        } else {\n          setState({\n            status: \"error\",\n            code: 499\n          });\n        }\n      }\n    };\n\n    getAndSetProvider();\n  }, []);\n\n  if (state.status === \"loading\") {\n    return /*#__PURE__*/_jsxDEV(LoadingAnimation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  } else if (state.status == \"error\") {\n    return /*#__PURE__*/_jsxDEV(Error, {\n      code: state.code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  } else {\n    /*#__PURE__*/\n    _jsxDEV(Component, {\n      setState: setState,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this);\n  }\n};\n\n_s(ComponentState, \"C1hO5zWOt786IOP60PcUqQoSGas=\");\n\n_c = ComponentState;\nexport default ComponentState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComponentState\");","map":{"version":3,"sources":["/home/neurotropik/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/hoc/ComponentState/index.jsx"],"names":["React","useEffect","useState","Web3","detectEthereumProvider","LoadingAnimation","ComponentState","component","Component","props","provider","setProvider","state","setState","status","code","getAndSetProvider","process","env"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA;AAAxB,CAAD,KAAqC;AAAA;;AAC1D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,EAAxC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC;AACjCY,IAAAA,MAAM,EAAE,SADyB;AAEjCC,IAAAA,IAAI,EAAE;AAF2B,GAAD,CAAlC;AAKAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,iBAAiB,GAAG,YAAY;AACpC,UAAIC,OAAO,CAACC,GAAR,IAAe,cAAnB,EAAmC;AACjCP,QAAAA,WAAW,CAAC,IAAIR,IAAJ,CAAS,uBAAT,CAAD,CAAX;AACD,OAFD,MAEO;AACL,cAAMO,QAAQ,GAAG,MAAMN,sBAAsB,EAA7C;;AACA,YAAIM,QAAJ,EAAc;AACZC,UAAAA,WAAW,CAACD,QAAD,CAAX;AACD,SAFD,MAEO;AACLG,UAAAA,QAAQ,CAAC;AAAEC,YAAAA,MAAM,EAAE,OAAV;AAAmBC,YAAAA,IAAI,EAAE;AAAzB,WAAD,CAAR;AACD;AACF;AACF,KAXD;;AAaAC,IAAAA,iBAAiB;AAClB,GAfQ,EAeN,EAfM,CAAT;;AAiBA,MAAIJ,KAAK,CAACE,MAAN,KAAiB,SAArB,EAAgC;AAC9B,wBAAO,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAIF,KAAK,CAACE,MAAN,IAAgB,OAApB,EAA6B;AAClC,wBAAO,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEF,KAAK,CAACG;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL;AAAA,YAAC,SAAD;AAAW,MAAA,QAAQ,EAAEF,QAArB;AAAA,SAAmCJ;AAAnC;AAAA;AAAA;AAAA;AAAA;AACD;AACF,CA/BD;;GAAMH,c;;KAAAA,c;AAiCN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport LoadingAnimation from '../../components/LoadingAnimation/index';\n\nconst ComponentState = ({ component: Component, props }) => {\n  const [provider, setProvider] = useState();\n  const [state, setState] = useState({\n    status: \"loading\",\n    code: null,\n  });\n\n  useEffect(() => {\n    const getAndSetProvider = async () => {\n      if (process.env == \"developement\") {\n        setProvider(new Web3(\"http://localhost:8545\"));\n      } else {\n        const provider = await detectEthereumProvider();\n        if (provider) {\n          setProvider(provider);\n        } else {\n          setState({ status: \"error\", code: 499 });\n        }\n      }\n    };\n\n    getAndSetProvider();\n  }, []);\n\n  if (state.status === \"loading\") {\n    return <LoadingAnimation />;\n  } else if (state.status == \"error\") {\n    return <Error code={state.code} />;\n  } else {\n    <Component setState={setState} {...props} />;\n  }\n};\n\nexport default ComponentState;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/neurotropik/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCardDashBoard/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"./CardHeader\";\nimport CardBody from \"./CardBody\";\nimport { CardContent, Grid } from \"@material-ui/core\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport CardActionBar from \"../CardActionBar/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 16,\n    marginBottom: 16,\n    textAlign: \"left\",\n    padding: 16\n  },\n  media: {\n    width: \"100%\"\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  datagrid: {\n    height: 275,\n    width: \"100%\"\n  },\n  collapse: {\n    paddingTop: 16\n  }\n}));\n\nconst GameCardDashBoard = ({\n  game: {\n    teamA,\n    teamB,\n    draw,\n    datetime,\n    description,\n    media,\n    id,\n    competition,\n    gameStatus\n  },\n  favorites,\n  setFavorites\n}) => {\n  _s();\n\n  const [isFavorite, setIsFavorite] = useState();\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const columns = [{\n    field: \"txHash\",\n    headerName: \"#\",\n    width: 600\n  }, {\n    field: \"value\",\n    headerName: \"value\",\n    width: 300\n  }, {\n    field: \"date\",\n    headerName: \"date\",\n    width: 300\n  }];\n  const [transactions, setTransactions] = useState([{\n    id: 1,\n    txHash: \"0x6c6d0c8f071c9dc33b5f6f1ece6199c00a56ea93cd3befb7f5e20754033b1ae0\",\n    value: 3.639,\n    date: \"\"\n  }, {\n    id: 2,\n    txHash: \"0x6c6d0c8f071c9dc33b5f6f1ece6199c00a56ea93cd3befb7f5e20754033b1ae0\",\n    value: 2.6995,\n    date: \"\"\n  }, {\n    id: 3,\n    txHash: \"0x6c6d0c8f071c9dc33b5f6f1ece6199c00a56ea93cd3befb7f5e20754033b1ae0\",\n    value: 50.99,\n    date: \"\"\n  }]);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded); // fetch transactions\n    // setTransactions\n  };\n\n  const handleAddFavorite = id => {\n    if (!isFavorite) {\n      setIsFavorite(true);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify([...favorites, id]));\n      setFavorites([...favorites, id]);\n    } else {\n      setIsFavorite(false);\n      const newFavorites = favorites.filter(favorite => favorite === id);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify(newFavorites));\n      setFavorites(newFavorites);\n    }\n  };\n\n  useEffect(() => {\n    const favoriteId = favorites.find(favId => favId === id);\n    favoriteId ? setIsFavorite(true) : setIsFavorite(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    id: `game-${id}`,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: media,\n          alt: \"game cover\",\n          className: classes.media\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        lg: 8,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            id: id,\n            teamA: teamA,\n            teamB: teamB,\n            datetime: datetime,\n            draw: draw,\n            competition: competition,\n            gameStatus: gameStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            teamA: teamA,\n            description: description,\n            teamB: teamB,\n            draw: draw\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActionBar, {\n        isFavorite: isFavorite,\n        handleAddFavorite: handleAddFavorite,\n        expanded: expanded,\n        handleExpandClick: handleExpandClick,\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      className: classes.collapse,\n      in: expanded,\n      timeout: \"auto\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.datagrid,\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: transactions,\n          columns: columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GameCardDashBoard, \"odm3yB/o9fTjUPigsD5aac7nTfk=\", false, function () {\n  return [useStyles];\n});\n\n_c = GameCardDashBoard;\nexport default GameCardDashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameCardDashBoard\");","map":{"version":3,"sources":["/home/neurotropik/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCardDashBoard/index.jsx"],"names":["React","useState","useEffect","makeStyles","Card","CardHeader","CardBody","CardContent","Grid","Collapse","DataGrid","CardActionBar","useStyles","theme","root","marginTop","marginBottom","textAlign","padding","media","width","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","datagrid","height","collapse","paddingTop","GameCardDashBoard","game","teamA","teamB","draw","datetime","description","id","competition","gameStatus","favorites","setFavorites","isFavorite","setIsFavorite","classes","expanded","setExpanded","columns","field","headerName","transactions","setTransactions","txHash","value","date","handleExpandClick","handleAddFavorite","localStorage","setItem","JSON","stringify","newFavorites","filter","favorite","favoriteId","find","favId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"./CardHeader\";\nimport CardBody from \"./CardBody\";\nimport { CardContent, Grid } from \"@material-ui/core\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport CardActionBar from \"../CardActionBar/index\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 16,\n    marginBottom: 16,\n    textAlign: \"left\",\n    padding: 16,\n  },\n  media: {\n    width: \"100%\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  datagrid: {\n    height: 275,\n    width: \"100%\",\n  },\n  collapse: {\n    paddingTop: 16,\n  },\n}));\n\nconst GameCardDashBoard = ({\n  game: { teamA, teamB, draw, datetime, description, media, id, competition, gameStatus },\n  favorites,\n  setFavorites,\n}) => {\n  const [isFavorite, setIsFavorite] = useState();\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const columns = [\n    { field: \"txHash\", headerName: \"#\", width: 600 },\n    { field: \"value\", headerName: \"value\", width: 300 },\n    { field: \"date\", headerName: \"date\", width: 300 },\n  ];\n\n  const [transactions, setTransactions] = useState([\n    {\n      id: 1,\n      txHash:\n        \"0x6c6d0c8f071c9dc33b5f6f1ece6199c00a56ea93cd3befb7f5e20754033b1ae0\",\n      value: 3.639,\n      date: \"\",\n    },\n    {\n      id: 2,\n      txHash:\n        \"0x6c6d0c8f071c9dc33b5f6f1ece6199c00a56ea93cd3befb7f5e20754033b1ae0\",\n      value: 2.6995,\n      date: \"\",\n    },\n    {\n      id: 3,\n      txHash:\n        \"0x6c6d0c8f071c9dc33b5f6f1ece6199c00a56ea93cd3befb7f5e20754033b1ae0\",\n      value: 50.99,\n      date: \"\",\n    },\n  ]);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n    // fetch transactions\n    // setTransactions\n  };\n\n  const handleAddFavorite = (id) => {\n    if (!isFavorite) {\n      setIsFavorite(true);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify([...favorites, id]));\n      setFavorites([...favorites, id]);\n    } else {\n      setIsFavorite(false);\n      const newFavorites = favorites.filter((favorite) => favorite === id);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify(newFavorites));\n      setFavorites(newFavorites);\n    }\n  };\n\n  useEffect(() => {\n    const favoriteId = favorites.find((favId) => favId === id);\n    favoriteId ? setIsFavorite(true) : setIsFavorite(false);\n  }, []);\n\n  return (\n    <Card className={classes.root} id={`game-${id}`}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} lg={4}>\n          <img src={media} alt=\"game cover\" className={classes.media} />\n        </Grid>\n        <Grid item xs={12} lg={8}>\n          <CardContent>\n            <CardHeader\n              id={id}\n              teamA={teamA}\n              teamB={teamB}\n              datetime={datetime}\n              draw={draw}\n              competition={competition}\n              gameStatus={gameStatus}\n            />\n\n            <CardBody\n              teamA={teamA}\n              description={description}\n              teamB={teamB}\n              draw={draw}\n            />\n          </CardContent>\n        </Grid>\n        <CardActionBar\n          isFavorite={isFavorite}\n          handleAddFavorite={handleAddFavorite}\n          expanded={expanded}\n          handleExpandClick={handleExpandClick}\n          id={id}\n        />\n      </Grid>\n      <Collapse\n        className={classes.collapse}\n        in={expanded}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <div className={classes.datagrid}>\n          <DataGrid rows={transactions} columns={columns} />\n        </div>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default GameCardDashBoard;\n"]},"metadata":{},"sourceType":"module"}
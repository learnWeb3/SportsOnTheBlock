{"ast":null,"code":"var _jsxFileName = \"/home/neurotropik/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Dashboard/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // TEST ONLY\n\nimport { gamesMockup } from \"../Home/data/games\";\nimport GameCardDashboard from \"../../components/GameCardDashBoard\";\nimport FiltersArea from \"../../components/FiltersArea\";\nimport MainMetrics from \"../../components/MainMetrics\";\nimport { Container, makeStyles, Grid } from \"@material-ui/core\";\nimport Navbar from \"../../components/NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  gradient: {\n    backgroundImage: \"linear-gradient(315deg, #ffffff 0%, #d7e1ec 74%)\",\n    top: \"4rem\",\n    position: \"relative\"\n  }\n}));\n\nconst Dashboard = ({\n  favorites,\n  setFavorites,\n  setState\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [competitions, setCompetitions] = useState([{\n    id: 1,\n    name: \"Eurocup\"\n  }, {\n    id: 2,\n    name: \"test\"\n  }]);\n  const [competition, setCompetition] = useState({\n    id: 1,\n    name: \"Eurocup\"\n  });\n  const [isFilterGameToActive, setFilterGameToActive] = useState(true);\n  const [games, setGames] = useState(gamesMockup);\n  useEffect(() => {// 1- fetchCompetitions\n    // 2- setCompetitions\n    // 3- set competiton to most valuable one\n  });\n  useEffect(() => {// 1- fetchGames related to competition\n    // 2- setGames\n  }, [competition]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.gradient,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      competition: competition,\n      setCompetition: selectedCompetition => setCompetition(selectedCompetition),\n      competitions: competitions,\n      menuRightDisplayed: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(MainMetrics, {\n        userCount: 10,\n        totalFunds: 5,\n        competitionCount: 9,\n        gameCount: 18,\n        avgGamePerCompetition: 9,\n        transactionCount: 200,\n        avgTransactionCountPerAddress: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FiltersArea, {\n        competitions: competitions,\n        competition: competition,\n        setCompetition: selectedCompetition => setCompetition(selectedCompetition),\n        isFilterGameToActive: isFilterGameToActive,\n        setFilterGameToActive: isFilterGameToActiveState => setFilterGameToActive(isFilterGameToActiveState)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), games === null || games === void 0 ? void 0 : games.map(game => /*#__PURE__*/_jsxDEV(GameCardDashboard, {\n        favorites: favorites,\n        setFavorites: newFavorites => setFavorites(newFavorites),\n        game: game\n      }, `game-${game.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"CEVpEBt6gZoX4SG38zVxLoQTYaQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/neurotropik/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/pages/Dashboard/index.jsx"],"names":["React","useState","useEffect","gamesMockup","GameCardDashboard","FiltersArea","MainMetrics","Container","makeStyles","Grid","Navbar","useStyles","theme","gradient","backgroundImage","top","position","Dashboard","favorites","setFavorites","setState","classes","competitions","setCompetitions","id","name","competition","setCompetition","isFilterGameToActive","setFilterGameToActive","games","setGames","selectedCompetition","isFilterGameToActiveState","map","game","newFavorites"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n// TEST ONLY\nimport { gamesMockup } from \"../Home/data/games\";\nimport GameCardDashboard from \"../../components/GameCardDashBoard\";\nimport FiltersArea from \"../../components/FiltersArea\";\nimport MainMetrics from \"../../components/MainMetrics\";\nimport { Container, makeStyles, Grid } from \"@material-ui/core\";\nimport Navbar from \"../../components/NavBar\";\n\nconst useStyles = makeStyles((theme) => ({\n  gradient: {\n    backgroundImage: \"linear-gradient(315deg, #ffffff 0%, #d7e1ec 74%)\",\n    top: \"4rem\",\n    position: \"relative\",\n  },\n}));\n\nconst Dashboard = ({ favorites, setFavorites, setState }) => {\n  const classes = useStyles();\n\n  const [competitions, setCompetitions] = useState([\n    { id: 1, name: \"Eurocup\" },\n    { id: 2, name: \"test\" },\n  ]);\n  const [competition, setCompetition] = useState({ id: 1, name: \"Eurocup\" });\n  const [isFilterGameToActive, setFilterGameToActive] = useState(true);\n  const [games, setGames] = useState(gamesMockup);\n\n  useEffect(() => {\n    // 1- fetchCompetitions\n    // 2- setCompetitions\n    // 3- set competiton to most valuable one\n  });\n\n  useEffect(() => {\n    // 1- fetchGames related to competition\n    // 2- setGames\n  }, [competition]);\n\n  return (\n    <div className={classes.gradient}>\n      <Navbar\n        competition={competition}\n        setCompetition={(selectedCompetition) =>\n          setCompetition(selectedCompetition)\n        }\n        competitions={competitions}\n        menuRightDisplayed={true}\n      />\n      <Container maxWidth=\"lg\">\n        <MainMetrics\n          userCount={10}\n          totalFunds={5}\n          competitionCount={9}\n          gameCount={18}\n          avgGamePerCompetition={9}\n          transactionCount={200}\n          avgTransactionCountPerAddress={3}\n        />\n        <FiltersArea\n          competitions={competitions}\n          competition={competition}\n          setCompetition={(selectedCompetition) =>\n            setCompetition(selectedCompetition)\n          }\n          isFilterGameToActive={isFilterGameToActive}\n          setFilterGameToActive={(isFilterGameToActiveState) =>\n            setFilterGameToActive(isFilterGameToActiveState)\n          }\n        />\n        {games?.map((game) => (\n          <GameCardDashboard\n            favorites={favorites}\n            setFavorites={(newFavorites) => setFavorites(newFavorites)}\n            key={`game-${game.id}`}\n            game={game}\n          />\n        ))}\n      </Container>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}
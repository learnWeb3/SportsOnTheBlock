{"ast":null,"code":"var _jsxFileName = \"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Context from \"../../context/index\";\nimport moment from \"moment\";\nimport { server_root_path } from \"../../config/index.json\";\nimport { useComponentState } from \"../../hooks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport { CardContent, CardMedia, Collapse, Typography, Chip, Grid, Button } from \"@material-ui/core\";\nimport capitalize from \"capitalize\";\nimport Modal from \"../Modal/index\";\nimport BetForm from \"../BetForm/index\";\nimport CardActionBar from \"../CardActionBar\";\nimport AccessTimeRoundedIcon from \"@material-ui/icons/AccessTimeRounded\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: \"left\",\n    padding: 16,\n    justifyContent: \"space-between\",\n    \"& h5\": {\n      fontWeight: 700\n    }\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  collapse: {\n    paddingTop: 16\n  },\n  cardHeader: {\n    paddingTop: 16,\n    paddingBottom: 16\n  },\n  badge: {\n    marginRight: 8,\n    marginBottom: 8,\n    padding: 8\n  },\n  gameName: {\n    marginBottom: 8\n  },\n  betButton: {\n    width: \"100%\"\n  },\n  betStats: {\n    padding: 16\n  },\n  textRight: {\n    textAlign: \"right\"\n  }\n}));\n\nconst GameCardDashBoard = ({\n  competition,\n  bettingContract,\n  accounts,\n  game: {\n    cover,\n    description,\n    ended,\n    started,\n    team1Name,\n    team1Score,\n    team2Name,\n    team2Score,\n    winner,\n    start,\n    id\n  }\n}) => {\n  _s();\n\n  const classes = useStyles(); // Access custom hooks to display errors and loading animations\n\n  const {\n    state,\n    setState,\n    Error,\n    LoadingAnimation,\n    isModalToogled,\n    setModalToogled\n  } = useComponentState(); // 0- check if user favorite the current game\n\n  const {\n    favorites,\n    setFavorites\n  } = useContext(Context);\n  const [isFavorite, setIsFavorite] = useState();\n  const [bets, setBets] = useState(null);\n  useEffect(() => {\n    const getAndSetBets = async () => {\n      const bets = await bettingContract.methods.getBets(id).call();\n\n      const _formattedBets = bets.map(({\n        amount,\n        outcome,\n        user\n      }) => ({\n        amount,\n        outcome,\n        user\n      }));\n\n      const team1Bets = _formattedBets.filter(bet => bet.outcome === \"1\");\n\n      const team2Bets = _formattedBets.filter(bet => bet.outcome === \"2\");\n\n      const drawBets = _formattedBets.filter(bet => bet.outcome === \"0\");\n\n      const team1BetsValue = team1Bets.length > 0 ? team1Bets.reduce((prev, next) => parseInt(prev.amount) + parseInt(next.amount)) : 0;\n      const team2BetsValue = team2Bets.length > 0 ? team2Bets.reduce((prev, next) => parseInt(prev.amount) + parseInt(next.amount)) : 0;\n      const drawBetsValue = drawBets.length > 0 ? drawBets.reduce((prev, next) => parseInt(prev.amount) + parseInt(next.amount)) : 0;\n      setBets({\n        bets: _formattedBets,\n        betStats: {\n          team1BetsValue: bettingContract.utils.fromWei(`${team1BetsValue}`),\n          team2BetsValue: bettingContract.utils.fromWei(`${team2BetsValue}`),\n          drawBetsValue: bettingContract.utils.fromWei(`${drawBetsValue}`)\n        }\n      });\n    };\n\n    if (id) {\n      const favoriteId = favorites.find(id => id === id);\n      favoriteId ? setIsFavorite(true) : setIsFavorite(false);\n      getAndSetBets();\n    }\n  }, [id]);\n\n  const handleAddFavorite = id => {\n    if (!isFavorite) {\n      setIsFavorite(true);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify([...favorites, id]));\n      setFavorites([...favorites, id]);\n    } else {\n      setIsFavorite(false);\n      const newFavorites = favorites.filter(id => id !== id);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify(newFavorites));\n      setFavorites(newFavorites);\n    }\n  }; // 3- Transactions\n\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded); // setTransactions\n  };\n\n  if (state.status === \"loading\") return /*#__PURE__*/_jsxDEV(LoadingAnimation, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 42\n  }, this);else if (state.status === \"loaded\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.cardHeader,\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            className: classes.badge,\n            color: started ? \"primary\" : \"secondary\",\n            icon: /*#__PURE__*/_jsxDEV(AccessTimeRoundedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 21\n            }, this),\n            label: moment(parseInt(start + \"000\")).format(\"DD/MM/YY HH:SS\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            className: classes.badge,\n            color: started ? \"primary\" : \"secondary\",\n            label: ended ? \"ended\" : started ? \"started\" : \"active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            className: classes.badge,\n            color: started ? \"primary\" : \"secondary\",\n            label: competition === null || competition === void 0 ? void 0 : competition.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n          image: server_root_path + cover,\n          className: classes.media,\n          title: `${capitalize(team1Name)} vs ${capitalize(team2Name)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.gameName,\n            variant: \"h6\",\n            component: \"h5\",\n            children: `${capitalize(team1Name)} vs ${capitalize(team2Name)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActionBar, {\n          handleAddFavorite: handleAddFavorite,\n          isFavorite: isFavorite,\n          handleExpandClick: handleExpandClick,\n          expanded: expanded,\n          gameId: id,\n          setModalToogled: setModalToogled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          className: classes.collapse,\n          in: expanded,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            className: classes.betStats,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                component: \"p\",\n                children: \"Current value locked\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"p\",\n                children: capitalize(team1Name)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"p\",\n                className: classes.textRight,\n                children: [bets === null || bets === void 0 ? void 0 : bets.betStats.team1BetsValue, \"\\xA0ETH\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"p\",\n                children: \"Draw\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"p\",\n                className: classes.textRight,\n                children: [bets === null || bets === void 0 ? void 0 : bets.betStats.drawBetsValue, \"\\xA0ETH\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"p\",\n                children: capitalize(team2Name)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"p\",\n                className: classes.textRight,\n                children: [bets === null || bets === void 0 ? void 0 : bets.betStats.team2BetsValue, \"\\xA0ETH\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: started && /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.betButton,\n                size: \"large\",\n                color: \"secondary\",\n                variant: \"contained\",\n                onClick: () => setModalToogled(true),\n                children: \"place a bet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), isModalToogled && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(Modal, {\n        component: BetForm,\n        title: `Place a bet on :`,\n        buttonLabel: \"confirm\",\n        setModalToogled: setModalToogled,\n        game: {\n          cover,\n          description,\n          ended,\n          started,\n          team1Name,\n          team1Score,\n          team2Name,\n          team2Score,\n          winner,\n          id\n        },\n        bettingContract: bettingContract,\n        accounts: accounts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }, this), document.querySelector(\"body\"))]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Error, {\n      code: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(GameCardDashBoard, \"rFmUkJLTMIJiiV/HHcdziigIAGA=\", false, function () {\n  return [useStyles, useComponentState];\n});\n\n_c = GameCardDashBoard;\nexport default GameCardDashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameCardDashBoard\");","map":{"version":3,"sources":["/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/index.jsx"],"names":["React","useState","useEffect","useContext","ReactDOM","Context","moment","server_root_path","useComponentState","makeStyles","Card","CardContent","CardMedia","Collapse","Typography","Chip","Grid","Button","capitalize","Modal","BetForm","CardActionBar","AccessTimeRoundedIcon","useStyles","theme","root","textAlign","padding","justifyContent","fontWeight","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","collapse","cardHeader","paddingBottom","badge","marginRight","marginBottom","gameName","betButton","width","betStats","textRight","GameCardDashBoard","competition","bettingContract","accounts","game","cover","description","ended","started","team1Name","team1Score","team2Name","team2Score","winner","start","id","classes","state","setState","Error","LoadingAnimation","isModalToogled","setModalToogled","favorites","setFavorites","isFavorite","setIsFavorite","bets","setBets","getAndSetBets","methods","getBets","call","_formattedBets","map","amount","outcome","user","team1Bets","filter","bet","team2Bets","drawBets","team1BetsValue","length","reduce","prev","next","parseInt","team2BetsValue","drawBetsValue","utils","fromWei","favoriteId","find","handleAddFavorite","localStorage","setItem","JSON","stringify","newFavorites","expanded","setExpanded","handleExpandClick","status","format","name","createPortal","document","querySelector"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Context from \"../../context/index\";\nimport moment from \"moment\";\nimport { server_root_path } from \"../../config/index.json\";\nimport { useComponentState } from \"../../hooks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport {\n  CardContent,\n  CardMedia,\n  Collapse,\n  Typography,\n  Chip,\n  Grid,\n  Button,\n} from \"@material-ui/core\";\nimport capitalize from \"capitalize\";\nimport Modal from \"../Modal/index\";\nimport BetForm from \"../BetForm/index\";\nimport CardActionBar from \"../CardActionBar\";\nimport AccessTimeRoundedIcon from \"@material-ui/icons/AccessTimeRounded\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: \"left\",\n    padding: 16,\n    justifyContent: \"space-between\",\n    \"& h5\": {\n      fontWeight: 700,\n    },\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  collapse: {\n    paddingTop: 16,\n  },\n  cardHeader: {\n    paddingTop: 16,\n    paddingBottom: 16,\n  },\n  badge: {\n    marginRight: 8,\n    marginBottom: 8,\n    padding: 8,\n  },\n  gameName: {\n    marginBottom: 8,\n  },\n  betButton: {\n    width: \"100%\",\n  },\n  betStats: {\n    padding: 16,\n  },\n  textRight: {\n    textAlign: \"right\",\n  },\n}));\n\nconst GameCardDashBoard = ({\n  competition,\n  bettingContract,\n  accounts,\n  game: {\n    cover,\n    description,\n    ended,\n    started,\n    team1Name,\n    team1Score,\n    team2Name,\n    team2Score,\n    winner,\n    start,\n    id,\n  },\n}) => {\n  const classes = useStyles();\n  // Access custom hooks to display errors and loading animations\n  const {\n    state,\n    setState,\n    Error,\n    LoadingAnimation,\n    isModalToogled,\n    setModalToogled,\n  } = useComponentState();\n  // 0- check if user favorite the current game\n  const { favorites, setFavorites } = useContext(Context);\n  const [isFavorite, setIsFavorite] = useState();\n  const [bets, setBets] = useState(null);\n\n  useEffect(() => {\n    const getAndSetBets = async () => {\n      const bets = await bettingContract.methods.getBets(id).call();\n      const _formattedBets = bets.map(({ amount, outcome, user }) => ({\n        amount,\n        outcome,\n        user,\n      }));\n      const team1Bets = _formattedBets.filter((bet) => bet.outcome === \"1\");\n      const team2Bets = _formattedBets.filter((bet) => bet.outcome === \"2\");\n      const drawBets = _formattedBets.filter((bet) => bet.outcome === \"0\");\n      const team1BetsValue =\n        team1Bets.length > 0\n          ? team1Bets.reduce(\n              (prev, next) => parseInt(prev.amount) + parseInt(next.amount)\n            )\n          : 0;\n      const team2BetsValue =\n        team2Bets.length > 0\n          ? team2Bets.reduce(\n              (prev, next) => parseInt(prev.amount) + parseInt(next.amount)\n            )\n          : 0;\n      const drawBetsValue =\n        drawBets.length > 0\n          ? drawBets.reduce(\n              (prev, next) => parseInt(prev.amount) + parseInt(next.amount)\n            )\n          : 0;\n\n      setBets({\n        bets: _formattedBets,\n        betStats: {\n          team1BetsValue: bettingContract.utils.fromWei(`${team1BetsValue}`),\n          team2BetsValue: bettingContract.utils.fromWei(`${team2BetsValue}`),\n          drawBetsValue: bettingContract.utils.fromWei(`${drawBetsValue}`),\n        },\n      });\n    };\n    if (id) {\n      const favoriteId = favorites.find((id) => id === id);\n      favoriteId ? setIsFavorite(true) : setIsFavorite(false);\n      getAndSetBets();\n    }\n  }, [id]);\n\n  const handleAddFavorite = (id) => {\n    if (!isFavorite) {\n      setIsFavorite(true);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify([...favorites, id]));\n      setFavorites([...favorites, id]);\n    } else {\n      setIsFavorite(false);\n      const newFavorites = favorites.filter((id) => id !== id);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify(newFavorites));\n      setFavorites(newFavorites);\n    }\n  };\n\n  // 3- Transactions\n  const [expanded, setExpanded] = React.useState(false);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n    // setTransactions\n  };\n\n  if (state.status === \"loading\") return <LoadingAnimation />;\n  else if (state.status === \"loaded\") {\n    return (\n      <>\n        <Card className={classes.root}>\n          <div className={classes.cardHeader}>\n            <Chip\n              className={classes.badge}\n              color={started ? \"primary\" : \"secondary\"}\n              icon={<AccessTimeRoundedIcon />}\n              label={moment(parseInt(start + \"000\")).format(\"DD/MM/YY HH:SS\")}\n            />\n            <Chip\n              className={classes.badge}\n              color={started ? \"primary\" : \"secondary\"}\n              label={ended ? \"ended\" : started ? \"started\" : \"active\"}\n            />\n            <Chip\n              className={classes.badge}\n              color={started ? \"primary\" : \"secondary\"}\n              label={competition?.name}\n            />\n          </div>\n          <CardMedia\n            image={server_root_path + cover}\n            className={classes.media}\n            title={`${capitalize(team1Name)} vs ${capitalize(team2Name)}`}\n          />\n          <CardContent>\n            <Typography\n              className={classes.gameName}\n              variant=\"h6\"\n              component=\"h5\"\n            >\n              {`${capitalize(team1Name)} vs ${capitalize(team2Name)}`}\n            </Typography>\n            <Typography variant=\"body1\" component=\"p\">\n              {description}\n            </Typography>\n          </CardContent>\n          <CardActionBar\n            handleAddFavorite={handleAddFavorite}\n            isFavorite={isFavorite}\n            handleExpandClick={handleExpandClick}\n            expanded={expanded}\n            gameId={id}\n            setModalToogled={setModalToogled}\n          />\n          <Collapse\n            className={classes.collapse}\n            in={expanded}\n            timeout=\"auto\"\n            unmountOnExit\n          >\n            <Grid container spacing={2} className={classes.betStats}>\n              <Grid item xs={12}>\n                <Typography variant=\"body1\" component=\"p\">\n                  Current value locked\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"h6\" component=\"p\">\n                  {capitalize(team1Name)}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography\n                  variant=\"h6\"\n                  component=\"p\"\n                  className={classes.textRight}\n                >\n                  {bets?.betStats.team1BetsValue}\n                  &nbsp;ETH\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"h6\" component=\"p\">\n                  {\"Draw\"}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography\n                  variant=\"h6\"\n                  component=\"p\"\n                  className={classes.textRight}\n                >\n                  {bets?.betStats.drawBetsValue}\n                  &nbsp;ETH\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"h6\" component=\"p\">\n                  {capitalize(team2Name)}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography\n                  variant=\"h6\"\n                  component=\"p\"\n                  className={classes.textRight}\n                >\n                  {bets?.betStats.team2BetsValue}\n                  &nbsp;ETH\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                {started && (\n                  <Button\n                    className={classes.betButton}\n                    size=\"large\"\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    onClick={() => setModalToogled(true)}\n                  >\n                    place a bet\n                  </Button>\n                )}\n              </Grid>\n            </Grid>\n          </Collapse>\n        </Card>\n        {isModalToogled &&\n          ReactDOM.createPortal(\n            <Modal\n              component={BetForm}\n              title={`Place a bet on :`}\n              buttonLabel=\"confirm\"\n              setModalToogled={setModalToogled}\n              game={{\n                cover,\n                description,\n                ended,\n                started,\n                team1Name,\n                team1Score,\n                team2Name,\n                team2Score,\n                winner,\n                id,\n              }}\n              bettingContract={bettingContract}\n              accounts={accounts}\n            />,\n            document.querySelector(\"body\")\n          )}\n      </>\n    );\n  } else {\n    return <Error code={500} />;\n  }\n};\n\nexport default GameCardDashBoard;\n"]},"metadata":{},"sourceType":"module"}
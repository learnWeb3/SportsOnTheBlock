{"ast":null,"code":"var _jsxFileName = \"/home/neurotropik/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/app.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport EthProviderContext from \"./context/EthProviderContext\";\nimport Home from \"./pages/Home/index.jsx\";\nimport Faq from \"./pages/Faq/index.jsx\";\nimport Dashboard from \"./pages/Dashboard\";\nimport ComponentState from \"./hoc/ComponentState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [Ethprovider, setEthProvider] = useState();\n  const [favorites, setFavorites] = useState();\n\n  const handleNewFavorite = newFavorites => {\n    setFavorites(newFavorites);\n  };\n\n  useEffect(() => {\n    const getAndSetEthProvider = async () => {\n      const provider = await detectEthereumProvider();\n      provider && setEthProvider(provider);\n    };\n\n    const getAndSetLocalFavorites = () => {\n      let localFavorites = localStorage.getItem(\"favoriteGames\");\n\n      if (localFavorites) {\n        localFavorites = JSON.parse(localFavorites);\n        setFavorites(localFavorites);\n      } else {\n        localStorage.setItem(\"favoriteGames\", JSON.stringify([]));\n        setFavorites([]);\n      }\n    };\n\n    getAndSetEthProvider();\n    getAndSetLocalFavorites();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(EthProviderContext.Provider, {\n    value: Ethprovider,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/faq\",\n          children: /*#__PURE__*/_jsxDEV(Faq, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/analytics\",\n          children: favorites && /*#__PURE__*/_jsxDEV(ComponentState, {\n            component: Dashboard,\n            setFavorites: newFavorites => handleNewFavorite(newFavorites),\n            favorites: favorites\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: favorites && /*#__PURE__*/_jsxDEV(ComponentState, {\n            component: Home,\n            setFavorites: newFavorites => handleNewFavorite(newFavorites),\n            favorites: favorites\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"nMLpncRJHPRMmKayW5fw9GP/sAk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/neurotropik/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/app.jsx"],"names":["React","useEffect","useState","BrowserRouter","Router","Switch","Route","detectEthereumProvider","EthProviderContext","Home","Faq","Dashboard","ComponentState","App","Ethprovider","setEthProvider","favorites","setFavorites","handleNewFavorite","newFavorites","getAndSetEthProvider","provider","getAndSetLocalFavorites","localFavorites","localStorage","getItem","JSON","parse","setItem","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,EAA9C;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,EAA1C;;AACA,QAAMgB,iBAAiB,GAAIC,YAAD,IAAkB;AAC1CF,IAAAA,YAAY,CAACE,YAAD,CAAZ;AACD,GAFD;;AAGAlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,oBAAoB,GAAG,YAAY;AACvC,YAAMC,QAAQ,GAAG,MAAMd,sBAAsB,EAA7C;AACAc,MAAAA,QAAQ,IAAIN,cAAc,CAACM,QAAD,CAA1B;AACD,KAHD;;AAIA,UAAMC,uBAAuB,GAAG,MAAM;AACpC,UAAIC,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAArB;;AACA,UAAIF,cAAJ,EAAoB;AAClBA,QAAAA,cAAc,GAAGG,IAAI,CAACC,KAAL,CAAWJ,cAAX,CAAjB;AACAN,QAAAA,YAAY,CAACM,cAAD,CAAZ;AACD,OAHD,MAGO;AACLC,QAAAA,YAAY,CAACI,OAAb,CAAqB,eAArB,EAAsCF,IAAI,CAACG,SAAL,CAAe,EAAf,CAAtC;AACAZ,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AACF,KATD;;AAUAG,IAAAA,oBAAoB;AACpBE,IAAAA,uBAAuB;AACxB,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAER,WAApC;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,MAAlB;AAAA,iCACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,YAAlB;AAAA,oBACGE,SAAS,iBACR,QAAC,cAAD;AACE,YAAA,SAAS,EAAEL,SADb;AAEE,YAAA,YAAY,EAAGQ,YAAD,IAAkBD,iBAAiB,CAACC,YAAD,CAFnD;AAGE,YAAA,SAAS,EAAEH;AAHb;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAJF,eAaE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAA,oBACGA,SAAS,iBACR,QAAC,cAAD;AACE,YAAA,SAAS,EAAEP,IADb;AAEE,YAAA,YAAY,EAAGU,YAAD,IAAkBD,iBAAiB,CAACC,YAAD,CAFnD;AAGE,YAAA,SAAS,EAAEH;AAHb;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAtDD;;GAAMH,G;;KAAAA,G;AAwDN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport EthProviderContext from \"./context/EthProviderContext\";\nimport Home from \"./pages/Home/index.jsx\";\nimport Faq from \"./pages/Faq/index.jsx\";\nimport Dashboard from \"./pages/Dashboard\";\nimport ComponentState from \"./hoc/ComponentState\";\n\nconst App = () => {\n  const [Ethprovider, setEthProvider] = useState();\n  const [favorites, setFavorites] = useState();\n  const handleNewFavorite = (newFavorites) => {\n    setFavorites(newFavorites);\n  };\n  useEffect(() => {\n    const getAndSetEthProvider = async () => {\n      const provider = await detectEthereumProvider();\n      provider && setEthProvider(provider);\n    };\n    const getAndSetLocalFavorites = () => {\n      let localFavorites = localStorage.getItem(\"favoriteGames\");\n      if (localFavorites) {\n        localFavorites = JSON.parse(localFavorites);\n        setFavorites(localFavorites);\n      } else {\n        localStorage.setItem(\"favoriteGames\", JSON.stringify([]));\n        setFavorites([]);\n      }\n    };\n    getAndSetEthProvider();\n    getAndSetLocalFavorites();\n  }, []);\n\n  return (\n    <EthProviderContext.Provider value={Ethprovider}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/faq\">\n            <Faq />\n          </Route>\n          <Route exact path=\"/analytics\">\n            {favorites && (\n              <ComponentState\n                component={Dashboard}\n                setFavorites={(newFavorites) => handleNewFavorite(newFavorites)}\n                favorites={favorites}\n              />\n            )}\n          </Route>\n          <Route exact path=\"/\">\n            {favorites && (\n              <ComponentState\n                component={Home}\n                setFavorites={(newFavorites) => handleNewFavorite(newFavorites)}\n                favorites={favorites}\n              />\n            )}\n          </Route>\n        </Switch>\n      </Router>\n    </EthProviderContext.Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
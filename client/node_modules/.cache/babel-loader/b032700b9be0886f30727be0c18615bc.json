{"ast":null,"code":"var _jsxFileName = \"/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Context from \"../../context/index\";\nimport moment from \"moment\";\nimport { server_root_path } from \"../../config/index.json\";\nimport { useComponentState } from \"../../hooks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport { CardHeader, CardContent, CardMedia, Collapse, Typography, Chip } from \"@material-ui/core\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport Modal from \"../Modal/index\";\nimport BetForm from \"../BetForm/index\";\nimport CardActionBar from \"../CardActionBar\";\nimport AccessTimeRoundedIcon from \"@material-ui/icons/AccessTimeRounded\";\nimport ClassRoundedIcon from '@material-ui/icons/ClassRounded';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: \"left\",\n    padding: 16,\n    justifyContent: \"space-between\"\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  datagrid: {\n    height: 275,\n    width: \"100%\"\n  },\n  collapse: {\n    paddingTop: 16\n  },\n  cardHeader: {\n    padding: 16\n  }\n}));\n\nconst GameCardDashBoard = ({\n  competition,\n  bettingContract,\n  accounts,\n  game: {\n    cover,\n    description,\n    ended,\n    started,\n    team1Name,\n    team1Score,\n    team2Name,\n    team2Score,\n    winner,\n    start,\n    id\n  }\n}) => {\n  _s();\n\n  const classes = useStyles(); // Access custom hooks to display errors and loading animations\n\n  const {\n    state,\n    setState,\n    Error,\n    LoadingAnimation,\n    isModalToogled,\n    setModalToogled\n  } = useComponentState(); // 0- check if user favorite the current game\n\n  const {\n    favorites,\n    setFavorites\n  } = useContext(Context);\n  const [isFavorite, setIsFavorite] = useState();\n  useEffect(() => {\n    const favoriteId = favorites.find(id => id === id);\n    favoriteId ? setIsFavorite(true) : setIsFavorite(false);\n  }, []);\n\n  const handleAddFavorite = id => {\n    if (!isFavorite) {\n      setIsFavorite(true);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify([...favorites, id]));\n      setFavorites([...favorites, id]);\n    } else {\n      setIsFavorite(false);\n      const newFavorites = favorites.filter(id => id !== id);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify(newFavorites));\n      setFavorites(newFavorites);\n    }\n  };\n\n  const columns = [{\n    field: \"user\",\n    headerName: \"#\",\n    width: 600\n  }, {\n    field: \"value\",\n    headerName: \"value\",\n    width: 300\n  }, {\n    field: \"date\",\n    headerName: \"date\",\n    width: 300\n  }]; // 3- Transactions\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded); // setTransactions\n  };\n\n  if (state.status === \"loading\") return /*#__PURE__*/_jsxDEV(LoadingAnimation, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 42\n  }, this);else if (state.status === \"loaded\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.CardHeader,\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            color: \"primary\",\n            icon: /*#__PURE__*/_jsxDEV(AccessTimeRoundedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 41\n            }, this),\n            label: ended ? \"ended\" : started ? \"started\" : \"active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            color: \"primary\",\n            icon: /*#__PURE__*/_jsxDEV(ClassRoundedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 41\n            }, this),\n            label: competition === null || competition === void 0 ? void 0 : competition.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n          image: server_root_path + cover,\n          className: classes.media,\n          title: `${team1Name.toUpperCase()} vs ${team2Name.toUpperCase()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h5\",\n            children: [team1Name.toUpperCase(), \"\\xA0vs\\xA0\", team2Name.toUpperCase()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActionBar, {\n          handleAddFavorite: handleAddFavorite,\n          isFavorite: isFavorite,\n          handleExpandClick: handleExpandClick,\n          expanded: expanded,\n          gameId: id,\n          setModalToogled: setModalToogled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          className: classes.collapse,\n          in: expanded,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.datagrid,\n            children: /*#__PURE__*/_jsxDEV(DataGrid, {\n              rows: [],\n              columns: columns\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), isModalToogled && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(Modal, {\n        component: BetForm,\n        title: `Place a bet on :`,\n        buttonLabel: \"confirm\",\n        setModalToogled: setModalToogled,\n        game: {\n          cover,\n          description,\n          ended,\n          started,\n          team1Name,\n          team1Score,\n          team2Name,\n          team2Score,\n          winner,\n          id\n        },\n        bettingContract: bettingContract,\n        accounts: accounts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this), document.querySelector(\"body\"))]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Error, {\n      code: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(GameCardDashBoard, \"l1peNKnwcknScGacAU6DqDu1fB0=\", false, function () {\n  return [useStyles, useComponentState];\n});\n\n_c = GameCardDashBoard;\nexport default GameCardDashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameCardDashBoard\");","map":{"version":3,"sources":["/home/bitch1y/Documents/PROJECTS/ETHEREUM/SportsOnTheBlock/client/src/components/GameCard/index.jsx"],"names":["React","useState","useEffect","useContext","ReactDOM","Context","moment","server_root_path","useComponentState","makeStyles","Card","CardHeader","CardContent","CardMedia","Collapse","Typography","Chip","DataGrid","Modal","BetForm","CardActionBar","AccessTimeRoundedIcon","ClassRoundedIcon","useStyles","theme","root","textAlign","padding","justifyContent","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","datagrid","width","collapse","cardHeader","GameCardDashBoard","competition","bettingContract","accounts","game","cover","description","ended","started","team1Name","team1Score","team2Name","team2Score","winner","start","id","classes","state","setState","Error","LoadingAnimation","isModalToogled","setModalToogled","favorites","setFavorites","isFavorite","setIsFavorite","favoriteId","find","handleAddFavorite","localStorage","setItem","JSON","stringify","newFavorites","filter","columns","field","headerName","expanded","setExpanded","handleExpandClick","status","name","toUpperCase","createPortal","document","querySelector"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Context from \"../../context/index\";\nimport moment from \"moment\";\nimport { server_root_path } from \"../../config/index.json\";\nimport { useComponentState } from \"../../hooks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport {\n  CardHeader,\n  CardContent,\n  CardMedia,\n  Collapse,\n  Typography,\n  Chip,\n} from \"@material-ui/core\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport Modal from \"../Modal/index\";\nimport BetForm from \"../BetForm/index\";\nimport CardActionBar from \"../CardActionBar\";\nimport AccessTimeRoundedIcon from \"@material-ui/icons/AccessTimeRounded\";\nimport ClassRoundedIcon from '@material-ui/icons/ClassRounded';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: \"left\",\n    padding: 16,\n    justifyContent: \"space-between\",\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  datagrid: {\n    height: 275,\n    width: \"100%\",\n  },\n  collapse: {\n    paddingTop: 16,\n  },\n  cardHeader:{\n    padding: 16\n  }\n}));\n\nconst GameCardDashBoard = ({\n  competition,\n  bettingContract,\n  accounts,\n  game: {\n    cover,\n    description,\n    ended,\n    started,\n    team1Name,\n    team1Score,\n    team2Name,\n    team2Score,\n    winner,\n    start,\n    id,\n  },\n}) => {\n  const classes = useStyles();\n  // Access custom hooks to display errors and loading animations\n  const {\n    state,\n    setState,\n    Error,\n    LoadingAnimation,\n    isModalToogled,\n    setModalToogled,\n  } = useComponentState();\n  // 0- check if user favorite the current game\n  const { favorites, setFavorites } = useContext(Context);\n  const [isFavorite, setIsFavorite] = useState();\n\n  useEffect(() => {\n    const favoriteId = favorites.find((id) => id === id);\n    favoriteId ? setIsFavorite(true) : setIsFavorite(false);\n  }, []);\n\n  const handleAddFavorite = (id) => {\n    if (!isFavorite) {\n      setIsFavorite(true);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify([...favorites, id]));\n      setFavorites([...favorites, id]);\n    } else {\n      setIsFavorite(false);\n      const newFavorites = favorites.filter((id) => id !== id);\n      localStorage.setItem(\"favoriteGames\", JSON.stringify(newFavorites));\n      setFavorites(newFavorites);\n    }\n  };\n\n  const columns = [\n    { field: \"user\", headerName: \"#\", width: 600 },\n    { field: \"value\", headerName: \"value\", width: 300 },\n    { field: \"date\", headerName: \"date\", width: 300 },\n  ];\n\n  // 3- Transactions\n  const [expanded, setExpanded] = React.useState(false);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n    // setTransactions\n  };\n\n  if (state.status === \"loading\") return <LoadingAnimation />;\n  else if (state.status === \"loaded\") {\n    return (\n      <>\n        <Card className={classes.root}>\n          <div className={classes.CardHeader}>\n            <Chip color=\"primary\" icon={<AccessTimeRoundedIcon />} label={ended ? \"ended\" : started ? \"started\" : \"active\"}/>\n            <Chip color=\"primary\" icon={<ClassRoundedIcon />} label={competition?.name}/>\n          </div>\n          <CardMedia\n            image={server_root_path + cover}\n            className={classes.media}\n            title={`${team1Name.toUpperCase()} vs ${team2Name.toUpperCase()}`}\n          />\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h5\">\n              {team1Name.toUpperCase()}&nbsp;vs&nbsp;{team2Name.toUpperCase()}\n            </Typography>\n            <Typography variant=\"body1\" component=\"p\">\n              {description}\n            </Typography>\n          </CardContent>\n          <CardActionBar\n            handleAddFavorite={handleAddFavorite}\n            isFavorite={isFavorite}\n            handleExpandClick={handleExpandClick}\n            expanded={expanded}\n            gameId={id}\n            setModalToogled={setModalToogled}\n          />\n          <Collapse\n            className={classes.collapse}\n            in={expanded}\n            timeout=\"auto\"\n            unmountOnExit\n          >\n            <div className={classes.datagrid}>\n              <DataGrid rows={[]} columns={columns} />\n            </div>\n          </Collapse>\n        </Card>\n        {isModalToogled &&\n          ReactDOM.createPortal(\n            <Modal\n              component={BetForm}\n              title={`Place a bet on :`}\n              buttonLabel=\"confirm\"\n              setModalToogled={setModalToogled}\n              game={{\n                cover,\n                description,\n                ended,\n                started,\n                team1Name,\n                team1Score,\n                team2Name,\n                team2Score,\n                winner,\n                id,\n              }}\n              bettingContract={bettingContract}\n              accounts={accounts}\n            />,\n            document.querySelector(\"body\")\n          )}\n      </>\n    );\n  } else {\n    return <Error code={500} />;\n  }\n};\n\nexport default GameCardDashBoard;\n"]},"metadata":{},"sourceType":"module"}